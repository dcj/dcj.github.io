{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$retry.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEvHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,MAAA,CAAgB,IAAK,EACrB,KAAIC,OAASP,OAAA,CAAQ,sDAAR,CAAb,CACIQ,eAAiBR,OAAA,CAAQ,yDAAR,CADrB,CAEIS,QAAUT,OAAA,CAAQ,6DAAR,CAyDdE,QAAAI,MAAA,CAxDAA,QAAc,CAACI,aAAD,CAAgB,CACJ,IAAK,EAA3B,GAAIA,aAAJ,GAAgCA,aAAhC;AAAgDC,QAAhD,CAGIC,cAAA,CADAF,aAAJ,EAA8C,QAA9C,GAAqB,MAAOA,cAA5B,CACaA,aADb,CAIa,CACLG,MAAOH,aADF,CAPa,KAWtBG,MAAQD,aAAAC,MAAcC,cAAAA,CAAKF,aAAAG,eAA/B,KAAsDA,eAAwB,IAAK,EAAZ,GAAAD,aAAA,CAAgB,CAAA,CAAhB,CAAwBA,aAC/F,OAAO,SAAS,CAACE,eAAD,CAAS,CAAE,MAAgB,EAAT,EAAAH,KAAA,CAAaJ,OAAAQ,MAAb,CAA6BV,MAAAW,KAAA,CAAYF,eAAZ,CAAoB,QAAS,CAACA,MAAD,CAAS,CACjG,IAAIG,WAAa,IAAjB,CACIC,MAAQ,CADZ,CAEIC,aAAe,IAAIb,cAAAc,aAFvB,CAGIC,QAHJ,CAIIC,kBAAoBA,QAAS,EAAG,CAChC,IAAIC,UAAY,CAAA,CAChBF,SAAA,CAAWP,MAAAU,UAAA,CAAiB,CACxBC,KAAMA,QAAS,CAACtB,KAAD,CAAQ,CACfU,cAAJ;CACIK,KADJ,CACY,CADZ,CAGAD,WAAAQ,KAAA,CAAgBtB,KAAhB,CAJmB,CADC,CAOxBuB,MAAOA,QAAS,CAACC,GAAD,CAAM,CACdT,KAAA,EAAJ,CAAcP,KAAd,CACQU,QAAJ,EACIA,QAAAO,YAAA,EAEA,CADAP,QACA,CADW,IACX,CAAAC,iBAAA,EAHJ,EAMIC,SANJ,CAMgB,CAAA,CAPpB,CAWIN,UAAAS,MAAA,CAAiBC,GAAjB,CAZc,CAPE,CAsBxBE,SAAUA,QAAS,EAAG,CAAE,MAAOZ,WAAAY,SAAA,EAAT,CAtBE,CAAjB,CAwBPN,UAAJ,EACIF,QAAAO,YAAA,EAEA,CADAP,QACA,CADW,IACX,CAAAC,iBAAA,EAHJ,EAMIH,YAAAW,IAAA,CAAiBT,QAAjB,CAhC4B,CAmCpCC,kBAAA,EACA,OAAOH,aAzC0F,CAAtC,CAAtC,CAZC,CAPyF;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/retry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$retry\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nvar lift_1 = require(\"../util/lift\");\nvar Subscription_1 = require(\"../Subscription\");\nvar empty_1 = require(\"../observable/empty\");\nfunction retry(configOrCount) {\n    if (configOrCount === void 0) { configOrCount = Infinity; }\n    var config;\n    if (configOrCount && typeof configOrCount === 'object') {\n        config = configOrCount;\n    }\n    else {\n        config = {\n            count: configOrCount\n        };\n    }\n    var count = config.count, _a = config.resetOnSuccess, resetOnSuccess = _a === void 0 ? false : _a;\n    return function (source) { return count <= 0 ? empty_1.EMPTY : lift_1.lift(source, function (source) {\n        var subscriber = this;\n        var soFar = 0;\n        var subscription = new Subscription_1.Subscription();\n        var innerSub;\n        var subscribeForRetry = function () {\n            var syncUnsub = false;\n            innerSub = source.subscribe({\n                next: function (value) {\n                    if (resetOnSuccess) {\n                        soFar = 0;\n                    }\n                    subscriber.next(value);\n                },\n                error: function (err) {\n                    if (soFar++ < count) {\n                        if (innerSub) {\n                            innerSub.unsubscribe();\n                            innerSub = null;\n                            subscribeForRetry();\n                        }\n                        else {\n                            syncUnsub = true;\n                        }\n                    }\n                    else {\n                        subscriber.error(err);\n                    }\n                },\n                complete: function () { return subscriber.complete(); },\n            });\n            if (syncUnsub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                subscribeForRetry();\n            }\n            else {\n                subscription.add(innerSub);\n            }\n        };\n        subscribeForRetry();\n        return subscription;\n    }); };\n}\nexports.retry = retry;\n//# sourceMappingURL=retry.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","retry","lift_1","Subscription_1","empty_1","configOrCount","Infinity","config","count","_a","resetOnSuccess","source","EMPTY","lift","subscriber","soFar","subscription","Subscription","innerSub","subscribeForRetry","syncUnsub","subscribe","next","error","err","unsubscribe","complete","add"]
}
