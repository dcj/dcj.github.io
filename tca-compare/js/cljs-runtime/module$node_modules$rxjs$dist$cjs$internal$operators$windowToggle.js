shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$windowToggle=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}
extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});exports.windowToggle=void 0;var Subject_1=require("module$node_modules$rxjs$dist$cjs$internal$Subject"),Subscription_1=require("module$node_modules$rxjs$dist$cjs$internal$Subscription"),innerSubscribe_1=require("module$node_modules$rxjs$dist$cjs$internal$innerSubscribe"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift");exports.windowToggle=
function(openings,closingSelector){return function(source){return lift_1.lift(source,new WindowToggleOperator(openings,closingSelector))}};var WindowToggleOperator=function(){function WindowToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector}WindowToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowToggleSubscriber(subscriber,this.openings,this.closingSelector))};return WindowToggleOperator}(),WindowToggleSubscriber=
function(_super){function WindowToggleSubscriber(destination,openings,closingSelector){destination=_super.call(this,destination)||this;destination.openings=openings;destination.closingSelector=closingSelector;destination.contexts=[];destination.add(destination.openSubscription=innerSubscribe_1.innerSubscribe(openings,new innerSubscribe_1.ComplexInnerSubscriber(destination,openings,0)));return destination}__extends(WindowToggleSubscriber,_super);WindowToggleSubscriber.prototype._next=function(value){var contexts=
this.contexts;if(contexts)for(var len=contexts.length,i=0;i<len;i++)contexts[i].window.next(value)};WindowToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;this.contexts=null;if(contexts)for(var len=contexts.length,index=-1;++index<len;){var context_1=contexts[index];context_1.window.error(err);context_1.subscription.unsubscribe()}_super.prototype._error.call(this,err)};WindowToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;this.contexts=null;if(contexts)for(var len=
contexts.length,index=-1;++index<len;){var context_2=contexts[index];context_2.window.complete();context_2.subscription.unsubscribe()}_super.prototype._complete.call(this)};WindowToggleSubscriber.prototype.unsubscribe=function(){if(!this.closed){var contexts=this.contexts;this.contexts=null;if(contexts)for(var len=contexts.length,index=-1;++index<len;){var context_3=contexts[index];context_3.window.unsubscribe();context_3.subscription.unsubscribe()}_super.prototype.unsubscribe.call(this)}};WindowToggleSubscriber.prototype.notifyNext=
function(outerValue,innerValue){if(outerValue===this.openings){outerValue=void 0;try{var closingSelector=this.closingSelector;outerValue=closingSelector(innerValue)}catch(e){return this.error(e)}innerValue=new Subject_1.Subject;closingSelector=new Subscription_1.Subscription;var context_4={window:innerValue,subscription:closingSelector};this.contexts.push(context_4);outerValue=innerSubscribe_1.innerSubscribe(outerValue,new innerSubscribe_1.ComplexInnerSubscriber(this,context_4,0));outerValue.closed?
this.closeWindow(this.contexts.length-1):(outerValue.context=context_4,closingSelector.add(outerValue));this.destination.next(innerValue)}else this.closeWindow(this.contexts.indexOf(outerValue))};WindowToggleSubscriber.prototype.notifyError=function(err){this.error(err)};WindowToggleSubscriber.prototype.notifyComplete=function(inner){inner!==this.openSubscription&&this.closeWindow(this.contexts.indexOf(inner.context))};WindowToggleSubscriber.prototype.closeWindow=function(index){if(-1!==index){var contexts=
this.contexts,context=contexts[index],window=context.window;context=context.subscription;contexts.splice(index,1);window.complete();context.unsubscribe()}};return WindowToggleSubscriber}(innerSubscribe_1.ComplexOuterSubscriber)}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$windowToggle.js.map
