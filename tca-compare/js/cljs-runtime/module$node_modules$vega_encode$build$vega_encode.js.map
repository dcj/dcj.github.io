{
"version":3,
"file":"module$node_modules$vega_encode$build$vega_encode.js",
"lineCount":37,
"mappings":"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",
"sources":["node_modules/vega-encode/build/vega-encode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_encode$build$vega_encode\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-scale'), require('vega-util'), require('d3-array'), require('d3-interpolate')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-scale', 'vega-util', 'd3-array', 'd3-interpolate'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.d3, global.d3));\n}(this, (function (exports, vegaDataflow, vegaScale, vegaUtil, d3Array, d3Interpolate) { 'use strict';\n\n  /**\n   * Generates axis ticks for visualizing a spatial scale.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Scale} params.scale - The scale to generate ticks for.\n   * @param {*} [params.count=10] - The approximate number of ticks, or\n   *   desired tick interval, to use.\n   * @param {Array<*>} [params.values] - The exact tick values to use.\n   *   These must be legal domain values for the provided scale.\n   *   If provided, the count argument is ignored.\n   * @param {function(*):string} [params.formatSpecifier] - A format specifier\n   *   to use in conjunction with scale.tickFormat. Legal values are\n   *   any valid d3 4.0 format specifier.\n   * @param {function(*):string} [params.format] - The format function to use.\n   *   If provided, the formatSpecifier argument is ignored.\n   */\n  function AxisTicks(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(AxisTicks, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var locale = pulse.dataflow.locale(),\n          out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          ticks = this.value,\n          scale = _.scale,\n          tally = _.count == null ? (_.values ? _.values.length : 10) : _.count,\n          count = vegaScale.tickCount(scale, tally, _.minstep),\n          format = _.format || vegaScale.tickFormat(locale, scale, count, _.formatSpecifier, _.formatType, !!_.values),\n          values = _.values ? vegaScale.validTicks(scale, _.values, count) : vegaScale.tickValues(scale, count);\n\n      if (ticks) out.rem = ticks;\n\n      ticks = values.map((value, i) =>\n        vegaDataflow.ingest({\n          index: i / (values.length - 1 || 1),\n          value: value,\n          label: format(value)\n        })\n      );\n\n      if (_.extra && ticks.length) {\n        // add an extra tick pegged to the initial domain value\n        // this is used to generate axes with 'binned' domains\n        ticks.push(vegaDataflow.ingest({\n          index: -1,\n          extra: {value: ticks[0].value},\n          label: ''\n        }));\n      }\n\n      out.source = ticks;\n      out.add = ticks;\n      this.value = ticks;\n\n      return out;\n    }\n  });\n\n  /**\n   * Joins a set of data elements against a set of visual items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): object} [params.item] - An item generator function.\n   * @param {function(object): *} [params.key] - The key field associating data and visual items.\n   */\n  function DataJoin(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  function defaultItemCreate() {\n    return vegaDataflow.ingest({});\n  }\n\n  function newMap(key) {\n    const map = vegaUtil.fastmap().test(t => t.exit);\n    map.lookup = t => map.get(key(t));\n    return map;\n  }\n\n  vegaUtil.inherits(DataJoin, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var df = pulse.dataflow,\n          out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          item = _.item || defaultItemCreate,\n          key = _.key || vegaDataflow.tupleid,\n          map = this.value;\n\n      // prevent transient (e.g., hover) requests from\n      // cascading across marks derived from marks\n      if (vegaUtil.isArray(out.encode)) {\n        out.encode = null;\n      }\n\n      if (map && (_.modified('key') || pulse.modified(key))) {\n        vegaUtil.error('DataJoin does not support modified key function or fields.');\n      }\n\n      if (!map) {\n        pulse = pulse.addAll();\n        this.value = map = newMap(key);\n      }\n\n      pulse.visit(pulse.ADD, t => {\n        const k = key(t);\n        let x = map.get(k);\n\n        if (x) {\n          if (x.exit) {\n            map.empty--;\n            out.add.push(x);\n          } else {\n            out.mod.push(x);\n          }\n        } else {\n          x = item(t);\n          map.set(k, x);\n          out.add.push(x);\n        }\n\n        x.datum = t;\n        x.exit = false;\n      });\n\n      pulse.visit(pulse.MOD, t => {\n        const k = key(t),\n              x = map.get(k);\n\n        if (x) {\n          x.datum = t;\n          out.mod.push(x);\n        }\n      });\n\n      pulse.visit(pulse.REM, t => {\n        const k = key(t),\n              x = map.get(k);\n\n        if (t === x.datum && !x.exit) {\n          out.rem.push(x);\n          x.exit = true;\n          ++map.empty;\n        }\n      });\n\n      if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n\n      if (pulse.clean() || _.clean && map.empty > df.cleanThreshold) {\n        df.runAfter(map.clean);\n      }\n\n      return out;\n    }\n  });\n\n  /**\n   * Invokes encoding functions for visual items.\n   * @constructor\n   * @param {object} params - The parameters to the encoding functions. This\n   *   parameter object will be passed through to all invoked encoding functions.\n   * @param {object} [params.mod=false] - Flag indicating if tuples in the input\n   *   mod set that are unmodified by encoders should be included in the output.\n   * @param {object} param.encoders - The encoding functions\n   * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set\n   * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set\n   * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set\n   */\n  function Encode(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(Encode, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ADD_REM),\n          fmod = _.mod || false,\n          encoders = _.encoders,\n          encode = pulse.encode;\n\n      // if an array, the encode directive includes additional sets\n      // that must be defined in order for the primary set to be invoked\n      // e.g., only run the update set if the hover set is defined\n      if (vegaUtil.isArray(encode)) {\n        if (out.changed() || encode.every(e => encoders[e])) {\n          encode = encode[0];\n          out.encode = null; // consume targeted encode directive\n        } else {\n          return pulse.StopPropagation;\n        }\n      }\n\n      // marshall encoder functions\n      var reenter = encode === 'enter',\n          update = encoders.update || vegaUtil.falsy,\n          enter = encoders.enter || vegaUtil.falsy,\n          exit = encoders.exit || vegaUtil.falsy,\n          set = (encode && !reenter ? encoders[encode] : update) || vegaUtil.falsy;\n\n      if (pulse.changed(pulse.ADD)) {\n        pulse.visit(pulse.ADD, t => { enter(t, _); update(t, _); });\n        out.modifies(enter.output);\n        out.modifies(update.output);\n        if (set !== vegaUtil.falsy && set !== update) {\n          pulse.visit(pulse.ADD, t => { set(t, _); });\n          out.modifies(set.output);\n        }\n      }\n\n      if (pulse.changed(pulse.REM) && exit !== vegaUtil.falsy) {\n        pulse.visit(pulse.REM, t => { exit(t, _); });\n        out.modifies(exit.output);\n      }\n\n      if (reenter || set !== vegaUtil.falsy) {\n        var flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);\n        if (reenter) {\n          pulse.visit(flag, t => {\n            var mod = enter(t, _) || fmod;\n            if (set(t, _) || mod) out.mod.push(t);\n          });\n          if (out.mod.length) out.modifies(enter.output);\n        } else {\n          pulse.visit(flag, t => {\n            if (set(t, _) || fmod) out.mod.push(t);\n          });\n        }\n        if (out.mod.length) out.modifies(set.output);\n      }\n\n      return out.changed() ? out : pulse.StopPropagation;\n    }\n  });\n\n  /**\n   * Generates legend entries for visualizing a scale.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Scale} params.scale - The scale to generate items for.\n   * @param {*} [params.count=5] - The approximate number of items, or\n   *   desired tick interval, to use.\n   * @param {*} [params.limit] - The maximum number of entries to\n   *   include in a symbol legend.\n   * @param {Array<*>} [params.values] - The exact tick values to use.\n   *   These must be legal domain values for the provided scale.\n   *   If provided, the count argument is ignored.\n   * @param {string} [params.formatSpecifier] - A format specifier\n   *   to use in conjunction with scale.tickFormat. Legal values are\n   *   any valid D3 format specifier string.\n   * @param {function(*):string} [params.format] - The format function to use.\n   *   If provided, the formatSpecifier argument is ignored.\n   */\n  function LegendEntries(params) {\n    vegaDataflow.Transform.call(this, [], params);\n  }\n\n  vegaUtil.inherits(LegendEntries, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value != null && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var locale = pulse.dataflow.locale(),\n          out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          items = this.value,\n          type  = _.type || vegaScale.SymbolLegend,\n          scale = _.scale,\n          limit = +_.limit,\n          count = vegaScale.tickCount(scale, _.count == null ? 5 : _.count, _.minstep),\n          lskip = !!_.values || type === vegaScale.SymbolLegend,\n          format = _.format || vegaScale.labelFormat(locale, scale, count, type, _.formatSpecifier, _.formatType, lskip),\n          values = _.values || vegaScale.labelValues(scale, count),\n          domain, fraction, size, offset, ellipsis;\n\n      if (items) out.rem = items;\n\n      if (type === vegaScale.SymbolLegend) {\n        if (limit && values.length > limit) {\n          pulse.dataflow.warn('Symbol legend count exceeds limit, filtering items.');\n          items = values.slice(0, limit - 1);\n          ellipsis = true;\n        } else {\n          items = values;\n        }\n\n        if (vegaUtil.isFunction(size = _.size)) {\n          // if first value maps to size zero, remove from list (vega#717)\n          if (!_.values && scale(items[0]) === 0) {\n            items = items.slice(1);\n          }\n          // compute size offset for legend entries\n          offset = items.reduce((max, value) => Math.max(max, size(value, _)), 0);\n        } else {\n          size = vegaUtil.constant(offset = size || 8);\n        }\n\n        items = items.map((value, index) =>\n          vegaDataflow.ingest({\n            index:  index,\n            label:  format(value, index, items),\n            value:  value,\n            offset: offset,\n            size:   size(value, _)\n          })\n        );\n\n        if (ellipsis) {\n          ellipsis = values[items.length];\n          items.push(vegaDataflow.ingest({\n            index:    items.length,\n            label:    `\\u2026${values.length-items.length} entries`,\n            value:    ellipsis,\n            offset:   offset,\n            size:     size(ellipsis, _)\n          }));\n        }\n      }\n\n      else if (type === vegaScale.GradientLegend) {\n        domain = scale.domain(),\n        fraction = vegaScale.scaleFraction(scale, domain[0], vegaUtil.peek(domain));\n\n        // if automatic label generation produces 2 or fewer values,\n        // use the domain end points instead (fixes vega/vega#1364)\n        if (values.length < 3 && !_.values && domain[0] !== vegaUtil.peek(domain)) {\n          values = [domain[0], vegaUtil.peek(domain)];\n        }\n\n        items = values.map((value, index) =>\n          vegaDataflow.ingest({\n            index: index,\n            label: format(value, index, values),\n            value: value,\n            perc:  fraction(value)\n          })\n        );\n      }\n\n      else {\n        size = values.length - 1;\n        fraction = vegaScale.labelFraction(scale);\n\n        items = values.map((value, index) =>\n          vegaDataflow.ingest({\n            index: index,\n            label: format(value, index, values),\n            value: value,\n            perc:  index ? fraction(value) : 0,\n            perc2: index === size ? 1 : fraction(values[index+1])\n          })\n        );\n      }\n\n      out.source = items;\n      out.add = items;\n      this.value = items;\n\n      return out;\n    }\n  });\n\n  const sourceX = t => t.source.x;\n  const sourceY = t => t.source.y;\n  const targetX = t => t.target.x;\n  const targetY = t => t.target.y;\n\n   /**\n    * Layout paths linking source and target elements.\n    * @constructor\n    * @param {object} params - The parameters for this operator.\n    */\n  function LinkPath(params) {\n    vegaDataflow.Transform.call(this, {}, params);\n  }\n\n  LinkPath.Definition = {\n    'type': 'LinkPath',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'sourceX', 'type': 'field', 'default': 'source.x' },\n      { 'name': 'sourceY', 'type': 'field', 'default': 'source.y' },\n      { 'name': 'targetX', 'type': 'field', 'default': 'target.x' },\n      { 'name': 'targetY', 'type': 'field', 'default': 'target.y' },\n      { 'name': 'orient', 'type': 'enum', 'default': 'vertical',\n        'values': ['horizontal', 'vertical', 'radial'] },\n      { 'name': 'shape', 'type': 'enum', 'default': 'line',\n        'values': ['line', 'arc', 'curve', 'diagonal', 'orthogonal'] },\n      { 'name': 'require', 'type': 'signal' },\n      { 'name': 'as', 'type': 'string', 'default': 'path' }\n    ]\n  };\n\n  vegaUtil.inherits(LinkPath, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var sx = _.sourceX || sourceX,\n          sy = _.sourceY || sourceY,\n          tx = _.targetX || targetX,\n          ty = _.targetY || targetY,\n          as = _.as || 'path',\n          orient = _.orient || 'vertical',\n          shape = _.shape || 'line',\n          path = Paths.get(shape + '-' + orient) || Paths.get(shape);\n\n      if (!path) {\n        vegaUtil.error('LinkPath unsupported type: ' + _.shape\n          + (_.orient ? '-' + _.orient : ''));\n      }\n\n      pulse.visit(pulse.SOURCE, t => {\n        t[as] = path(sx(t), sy(t), tx(t), ty(t));\n      });\n\n      return pulse.reflow(_.modified()).modifies(as);\n    }\n  });\n\n  const line = (sx, sy, tx, ty) =>\n    'M' + sx + ',' + sy +\n    'L' + tx + ',' + ty;\n\n  const lineR= (sa, sr, ta, tr) => line(\n    sr * Math.cos(sa), sr * Math.sin(sa),\n    tr * Math.cos(ta), tr * Math.sin(ta)\n  );\n\n  const arc = (sx, sy, tx, ty) => {\n    var dx = tx - sx,\n        dy = ty - sy,\n        rr = Math.sqrt(dx * dx + dy * dy) / 2,\n        ra = 180 * Math.atan2(dy, dx) / Math.PI;\n    return 'M' + sx + ',' + sy +\n           'A' + rr + ',' + rr +\n           ' ' + ra + ' 0 1' +\n           ' ' + tx + ',' + ty;\n  };\n\n  const arcR = (sa, sr, ta, tr) => arc(\n    sr * Math.cos(sa), sr * Math.sin(sa),\n    tr * Math.cos(ta), tr * Math.sin(ta)\n  );\n\n  const curve = (sx, sy, tx, ty) => {\n    const dx = tx - sx,\n          dy = ty - sy,\n          ix = 0.2 * (dx + dy),\n          iy = 0.2 * (dy - dx);\n    return 'M' + sx + ',' + sy +\n           'C' + (sx+ix) + ',' + (sy+iy) +\n           ' ' + (tx+iy) + ',' + (ty-ix) +\n           ' ' + tx + ',' + ty;\n  };\n\n  const curveR = (sa, sr, ta, tr) => curve(\n    sr * Math.cos(sa), sr * Math.sin(sa),\n    tr * Math.cos(ta), tr * Math.sin(ta)\n  );\n\n  const orthoX = (sx, sy, tx, ty) =>\n    'M' + sx + ',' + sy +\n    'V' + ty + 'H' + tx;\n\n  const orthoY = (sx, sy, tx, ty) =>\n    'M' + sx + ',' + sy +\n    'H' + tx + 'V' + ty;\n\n  const orthoR = (sa, sr, ta, tr) => {\n    const sc = Math.cos(sa),\n          ss = Math.sin(sa),\n          tc = Math.cos(ta),\n          ts = Math.sin(ta),\n          sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n    return 'M' + (sr*sc) + ',' + (sr*ss) +\n           'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n           ' ' + (sr*tc) + ',' + (sr*ts) +\n           'L' + (tr*tc) + ',' + (tr*ts);\n  };\n\n  const diagonalX = (sx, sy, tx, ty) => {\n    const m = (sx + tx) / 2;\n    return 'M' + sx + ',' + sy +\n           'C' + m  + ',' + sy +\n           ' ' + m  + ',' + ty +\n           ' ' + tx + ',' + ty;\n  };\n\n  const diagonalY = (sx, sy, tx, ty) => {\n    const m = (sy + ty) / 2;\n    return 'M' + sx + ',' + sy +\n           'C' + sx + ',' + m +\n           ' ' + tx + ',' + m +\n           ' ' + tx + ',' + ty;\n  };\n\n  const diagonalR = (sa, sr, ta, tr) => {\n    const sc = Math.cos(sa),\n          ss = Math.sin(sa),\n          tc = Math.cos(ta),\n          ts = Math.sin(ta),\n          mr = (sr + tr) / 2;\n    return 'M' + (sr*sc) + ',' + (sr*ss) +\n           'C' + (mr*sc) + ',' + (mr*ss) +\n           ' ' + (mr*tc) + ',' + (mr*ts) +\n           ' ' + (tr*tc) + ',' + (tr*ts);\n  };\n\n  const Paths = vegaUtil.fastmap({\n    'line': line,\n    'line-radial': lineR,\n    'arc': arc,\n    'arc-radial': arcR,\n    'curve': curve,\n    'curve-radial': curveR,\n    'orthogonal-horizontal': orthoX,\n    'orthogonal-vertical': orthoY,\n    'orthogonal-radial': orthoR,\n    'diagonal-horizontal': diagonalX,\n    'diagonal-vertical': diagonalY,\n    'diagonal-radial': diagonalR\n  });\n\n  /**\n   * Pie and donut chart layout.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} params.field - The value field to size pie segments.\n   * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.\n   * @param {number} [params.endAngle=2\u03c0] - The end angle (in radians) of the layout.\n   * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.\n   */\n  function Pie(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Pie.Definition = {\n    'type': 'Pie',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'field', 'type': 'field' },\n      { 'name': 'startAngle', 'type': 'number', 'default': 0 },\n      { 'name': 'endAngle', 'type': 'number', 'default': 6.283185307179586 },\n      { 'name': 'sort', 'type': 'boolean', 'default': false },\n      { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': ['startAngle', 'endAngle'] }\n    ]\n  };\n\n  vegaUtil.inherits(Pie, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var as = _.as || ['startAngle', 'endAngle'],\n          startAngle = as[0],\n          endAngle = as[1],\n          field = _.field || vegaUtil.one,\n          start = _.startAngle || 0,\n          stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,\n          data = pulse.source,\n          values = data.map(field),\n          n = values.length,\n          a = start,\n          k = (stop - start) / d3Array.sum(values),\n          index = d3Array.range(n),\n          i, t, v;\n\n      if (_.sort) {\n        index.sort((a, b) => values[a] - values[b]);\n      }\n\n      for (i=0; i<n; ++i) {\n        v = values[index[i]];\n        t = data[index[i]];\n        t[startAngle] = a;\n        t[endAngle] = (a += v * k);\n      }\n\n      this.value = values;\n      return pulse.reflow(_.modified()).modifies(as);\n    }\n  });\n\n  const DEFAULT_COUNT = 5;\n\n  function includeZero(scale) {\n    const type = scale.type;\n    return !scale.bins && (\n      type === vegaScale.Linear || type === vegaScale.Pow || type === vegaScale.Sqrt\n    );\n  }\n\n  function includePad(type) {\n    return vegaScale.isContinuous(type) && type !== vegaScale.Sequential;\n  }\n\n  const SKIP = vegaUtil.toSet([\n    'set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount',\n    'domain', 'domainMin', 'domainMid', 'domainMax',\n    'domainRaw', 'domainImplicit', 'nice', 'zero', 'bins',\n    'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma'\n  ]);\n\n  /**\n   * Maintains a scale function mapping data values to visual channels.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   */\n  function Scale(params) {\n    vegaDataflow.Transform.call(this, null, params);\n    this.modified(true); // always treat as modified\n  }\n\n  vegaUtil.inherits(Scale, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var df = pulse.dataflow,\n          scale = this.value,\n          key = scaleKey(_);\n\n      if (!scale || key !== scale.type) {\n        this.value = scale = vegaScale.scale(key)();\n      }\n\n      for (key in _) if (!SKIP[key]) {\n        // padding is a scale property for band/point but not others\n        if (key === 'padding' && includePad(scale.type)) continue;\n        // invoke scale property setter, raise warning if not found\n        vegaUtil.isFunction(scale[key])\n          ? scale[key](_[key])\n          : df.warn('Unsupported scale property: ' + key);\n      }\n\n      configureRange(scale, _,\n        configureBins(scale, _, configureDomain(scale, _, df))\n      );\n\n      return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n    }\n  });\n\n  function scaleKey(_) {\n    var t = _.type, d = '', n;\n\n    // backwards compatibility pre Vega 5.\n    if (t === vegaScale.Sequential) return vegaScale.Sequential + '-' + vegaScale.Linear;\n\n    if (isContinuousColor(_)) {\n      n = _.rawDomain ? _.rawDomain.length\n        : _.domain ? _.domain.length + +(_.domainMid != null)\n        : 0;\n      d = n === 2 ? vegaScale.Sequential + '-'\n        : n === 3 ? vegaScale.Diverging + '-'\n        : '';\n    }\n\n    return ((d + t) || vegaScale.Linear).toLowerCase();\n  }\n\n  function isContinuousColor(_) {\n    const t = _.type;\n    return vegaScale.isContinuous(t) && t !== vegaScale.Time && t !== vegaScale.UTC && (\n      _.scheme || _.range && _.range.length && _.range.every(vegaUtil.isString)\n    );\n  }\n\n  function configureDomain(scale, _, df) {\n    // check raw domain, if provided use that and exit early\n    var raw = rawDomain(scale, _.domainRaw, df);\n    if (raw > -1) return raw;\n\n    var domain = _.domain,\n        type = scale.type,\n        zero = _.zero || (_.zero === undefined && includeZero(scale)),\n        n, mid;\n\n    if (!domain) return 0;\n\n    // adjust continuous domain for minimum pixel padding\n    if (includePad(type) && _.padding && domain[0] !== vegaUtil.peek(domain)) {\n      domain = padDomain(type, domain, _.range, _.padding, _.exponent, _.constant);\n    }\n\n    // adjust domain based on zero, min, max settings\n    if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {\n      n = ((domain = domain.slice()).length - 1) || 1;\n      if (zero) {\n        if (domain[0] > 0) domain[0] = 0;\n        if (domain[n] < 0) domain[n] = 0;\n      }\n      if (_.domainMin != null) domain[0] = _.domainMin;\n      if (_.domainMax != null) domain[n] = _.domainMax;\n\n      if (_.domainMid != null) {\n        mid = _.domainMid;\n        const i = mid > domain[n] ? n + 1 : mid < domain[0] ? 0 : n;\n        if (i !== n) df.warn('Scale domainMid exceeds domain min or max.', mid);\n        domain.splice(i, 0, mid);\n      }\n    }\n\n    // set the scale domain\n    scale.domain(domainCheck(type, domain, df));\n\n    // if ordinal scale domain is defined, prevent implicit\n    // domain construction as side-effect of scale lookup\n    if (type === vegaScale.Ordinal) {\n      scale.unknown(_.domainImplicit ? vegaScale.scaleImplicit : undefined);\n    }\n\n    // perform 'nice' adjustment as requested\n    if (_.nice && scale.nice) {\n      scale.nice((_.nice !== true && vegaScale.tickCount(scale, _.nice)) || null);\n    }\n\n    // return the cardinality of the domain\n    return domain.length;\n  }\n\n  function rawDomain(scale, raw, df) {\n    if (raw) {\n      scale.domain(domainCheck(scale.type, raw, df));\n      return raw.length;\n    } else {\n      return -1;\n    }\n  }\n\n  function padDomain(type, domain, range, pad, exponent, constant) {\n    var span = Math.abs(vegaUtil.peek(range) - range[0]),\n        frac = span / (span - 2 * pad),\n        d = type === vegaScale.Log    ? vegaUtil.zoomLog(domain, null, frac)\n          : type === vegaScale.Sqrt   ? vegaUtil.zoomPow(domain, null, frac, 0.5)\n          : type === vegaScale.Pow    ? vegaUtil.zoomPow(domain, null, frac, exponent || 1)\n          : type === vegaScale.Symlog ? vegaUtil.zoomSymlog(domain, null, frac, constant || 1)\n          : vegaUtil.zoomLinear(domain, null, frac);\n\n    domain = domain.slice();\n    domain[0] = d[0];\n    domain[domain.length-1] = d[1];\n    return domain;\n  }\n\n  function domainCheck(type, domain, df) {\n    if (vegaScale.isLogarithmic(type)) {\n      // sum signs of domain values\n      // if all pos or all neg, abs(sum) === domain.length\n      var s = Math.abs(domain.reduce((s, v) => s + (v < 0 ? -1 : v > 0 ? 1 : 0), 0));\n\n      if (s !== domain.length) {\n        df.warn('Log scale domain includes zero: ' + vegaUtil.stringValue(domain));\n      }\n    }\n    return domain;\n  }\n\n  function configureBins(scale, _, count) {\n    let bins = _.bins;\n\n    if (bins && !vegaUtil.isArray(bins)) {\n      // generate bin boundary array\n      const domain = scale.domain(),\n            lo = domain[0],\n            hi = vegaUtil.peek(domain),\n            step = bins.step;\n\n      let start = bins.start == null ? lo : bins.start,\n          stop = bins.stop == null ? hi : bins.stop;\n\n      if (!step) vegaUtil.error('Scale bins parameter missing step property.');\n      if (start < lo) start = step * Math.ceil(lo / step);\n      if (stop > hi) stop = step * Math.floor(hi / step);\n      bins = d3Array.range(start, stop + step / 2, step);\n    }\n\n    if (bins) {\n      // assign bin boundaries to scale instance\n      scale.bins = bins;\n    } else if (scale.bins) {\n      // no current bins, remove bins if previously set\n      delete scale.bins;\n    }\n\n    // special handling for bin-ordinal scales\n    if (scale.type === vegaScale.BinOrdinal) {\n      if (!bins) {\n        // the domain specifies the bins\n        scale.bins = scale.domain();\n      } else if (!_.domain && !_.domainRaw) {\n        // the bins specify the domain\n        scale.domain(bins);\n        count = bins.length;\n      }\n    }\n\n    // return domain cardinality\n    return count;\n  }\n\n  function configureRange(scale, _, count) {\n    var type = scale.type,\n        round = _.round || false,\n        range = _.range;\n\n    // if range step specified, calculate full range extent\n    if (_.rangeStep != null) {\n      range = configureRangeStep(type, _, count);\n    }\n\n    // else if a range scheme is defined, use that\n    else if (_.scheme) {\n      range = configureScheme(type, _, count);\n      if (vegaUtil.isFunction(range)) {\n        if (scale.interpolator) {\n          return scale.interpolator(range);\n        } else {\n          vegaUtil.error(`Scale type ${type} does not support interpolating color schemes.`);\n        }\n      }\n    }\n\n    // given a range array for an interpolating scale, convert to interpolator\n    if (range && vegaScale.isInterpolating(type)) {\n      return scale.interpolator(\n        vegaScale.interpolateColors(flip(range, _.reverse), _.interpolate, _.interpolateGamma)\n      );\n    }\n\n    // configure rounding / interpolation\n    if (range && _.interpolate && scale.interpolate) {\n      scale.interpolate(vegaScale.interpolate(_.interpolate, _.interpolateGamma));\n    } else if (vegaUtil.isFunction(scale.round)) {\n      scale.round(round);\n    } else if (vegaUtil.isFunction(scale.rangeRound)) {\n      scale.interpolate(round ? d3Interpolate.interpolateRound : d3Interpolate.interpolate);\n    }\n\n    if (range) scale.range(flip(range, _.reverse));\n  }\n\n  function configureRangeStep(type, _, count) {\n    if (type !== vegaScale.Band && type !== vegaScale.Point) {\n      vegaUtil.error('Only band and point scales support rangeStep.');\n    }\n\n    // calculate full range based on requested step size and padding\n    var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,\n        inner = type === vegaScale.Point ? 1\n              : ((_.paddingInner != null ? _.paddingInner : _.padding) || 0);\n    return [0, _.rangeStep * vegaScale.bandSpace(count, inner, outer)];\n  }\n\n  function configureScheme(type, _, count) {\n    var extent = _.schemeExtent,\n        name, scheme;\n\n    if (vegaUtil.isArray(_.scheme)) {\n      scheme = vegaScale.interpolateColors(_.scheme, _.interpolate, _.interpolateGamma);\n    } else {\n      name = _.scheme.toLowerCase();\n      scheme = vegaScale.scheme(name);\n      if (!scheme) vegaUtil.error(`Unrecognized scheme name: ${_.scheme}`);\n    }\n\n    // determine size for potential discrete range\n    count = (type === vegaScale.Threshold) ? count + 1\n      : (type === vegaScale.BinOrdinal) ? count - 1\n      : (type === vegaScale.Quantile || type === vegaScale.Quantize) ? (+_.schemeCount || DEFAULT_COUNT)\n      : count;\n\n    // adjust and/or quantize scheme as appropriate\n    return vegaScale.isInterpolating(type) ? adjustScheme(scheme, extent, _.reverse)\n      : vegaUtil.isFunction(scheme) ? vegaScale.quantizeInterpolator(adjustScheme(scheme, extent), count)\n      : type === vegaScale.Ordinal ? scheme : scheme.slice(0, count);\n  }\n\n  function adjustScheme(scheme, extent, reverse) {\n    return (vegaUtil.isFunction(scheme) && (extent || reverse))\n      ? vegaScale.interpolateRange(scheme, flip(extent || [0, 1], reverse))\n      : scheme;\n  }\n\n  function flip(array, reverse) {\n    return reverse ? array.slice().reverse() : array;\n  }\n\n  /**\n   * Sorts scenegraph items in the pulse source array.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting tuples.\n   */\n  function SortItems(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(SortItems, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const mod = _.modified('sort')\n            || pulse.changed(pulse.ADD)\n            || pulse.modified(_.sort.fields)\n            || pulse.modified('datum');\n\n      if (mod) pulse.source.sort(vegaDataflow.stableCompare(_.sort));\n\n      this.modified(mod);\n      return pulse;\n    }\n  });\n\n  const Zero = 'zero',\n        Center = 'center',\n        Normalize = 'normalize',\n        DefOutput = ['y0', 'y1'];\n\n  /**\n   * Stack layout for visualization elements.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} params.field - The value field to stack.\n   * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n   * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.\n   * @param {string} [offset='zero'] - Stack baseline offset. One of 'zero', 'center', 'normalize'.\n   */\n  function Stack(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Stack.Definition = {\n    'type': 'Stack',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'field', 'type': 'field' },\n      { 'name': 'groupby', 'type': 'field', 'array': true },\n      { 'name': 'sort', 'type': 'compare' },\n      { 'name': 'offset', 'type': 'enum', 'default': Zero, 'values': [Zero, Center, Normalize] },\n      { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': DefOutput }\n    ]\n  };\n\n  vegaUtil.inherits(Stack, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var as = _.as || DefOutput,\n          y0 = as[0],\n          y1 = as[1],\n          sort = vegaDataflow.stableCompare(_.sort),\n          field = _.field || vegaUtil.one,\n          stack = _.offset === Center ? stackCenter\n                : _.offset === Normalize ? stackNormalize\n                : stackZero,\n          groups, i, n, max;\n\n      // partition, sum, and sort the stack groups\n      groups = partition(pulse.source, _.groupby, sort, field);\n\n      // compute stack layouts per group\n      for (i=0, n=groups.length, max=groups.max; i<n; ++i) {\n        stack(groups[i], max, field, y0, y1);\n      }\n\n      return pulse.reflow(_.modified()).modifies(as);\n    }\n  });\n\n  function stackCenter(group, max, field, y0, y1) {\n    var last = (max - group.sum) / 2,\n        m = group.length,\n        j = 0, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      t[y0] = last;\n      t[y1] = (last += Math.abs(field(t)));\n    }\n  }\n\n  function stackNormalize(group, max, field, y0, y1) {\n    var scale = 1 / group.sum,\n        last = 0,\n        m = group.length,\n        j = 0, v = 0, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      t[y0] = last;\n      t[y1] = last = scale * (v += Math.abs(field(t)));\n    }\n  }\n\n  function stackZero(group, max, field, y0, y1) {\n    var lastPos = 0,\n        lastNeg = 0,\n        m = group.length,\n        j = 0, v, t;\n\n    for (; j<m; ++j) {\n      t = group[j];\n      v = +field(t);\n      if (v < 0) {\n        t[y0] = lastNeg;\n        t[y1] = (lastNeg += v);\n      } else {\n        t[y0] = lastPos;\n        t[y1] = (lastPos += v);\n      }\n    }\n  }\n\n  function partition(data, groupby, sort, field) {\n    var groups = [],\n        get = f => f(t),\n        map, i, n, m, t, k, g, s, max;\n\n    // partition data points into stack groups\n    if (groupby == null) {\n      groups.push(data.slice());\n    } else {\n      for (map={}, i=0, n=data.length; i<n; ++i) {\n        t = data[i];\n        k = groupby.map(get);\n        g = map[k];\n        if (!g) {\n          map[k] = (g = []);\n          groups.push(g);\n        }\n        g.push(t);\n      }\n    }\n\n    // compute sums of groups, sort groups as needed\n    for (k=0, max=0, m=groups.length; k<m; ++k) {\n      g = groups[k];\n      for (i=0, s=0, n=g.length; i<n; ++i) {\n        s += Math.abs(field(g[i]));\n      }\n      g.sum = s;\n      if (s > max) max = s;\n      if (sort) g.sort(sort);\n    }\n    groups.max = max;\n\n    return groups;\n  }\n\n  exports.axisticks = AxisTicks;\n  exports.datajoin = DataJoin;\n  exports.encode = Encode;\n  exports.legendentries = LegendEntries;\n  exports.linkpath = LinkPath;\n  exports.pie = Pie;\n  exports.scale = Scale;\n  exports.sortitems = SortItems;\n  exports.stack = Stack;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","d3","vegaDataflow","vegaScale","vegaUtil","d3Array","d3Interpolate","AxisTicks","params","Transform","call","DataJoin","defaultItemCreate","ingest","newMap","key","map","fastmap","test","t","exit","lookup","map.lookup","get","Encode","LegendEntries","LinkPath","Pie","includePad","type","isContinuous","Sequential","Scale","modified","domainCheck","domain","df","isLogarithmic","Math","abs","s","reduce","v","length","warn","stringValue","adjustScheme","scheme","extent","reverse","isFunction","interpolateRange","flip","array","slice","SortItems","Stack","stackCenter","group","max","field","y0","y1","last","sum","m","j","stackNormalize","scale","stackZero","lastNeg","lastPos","partition","data","groupby","sort","groups","f","n","push","i","k","g","inherits","transform","_","pulse","value","StopPropagation","locale","dataflow","out","fork","NO_SOURCE","NO_FIELDS","ticks","count","tickCount","tally","values","minstep","format","tickFormat","formatSpecifier","formatType","validTicks","tickValues","rem","index","label","extra","source","add","item","tupleid","isArray","encode","error","addAll","visit","ADD","x","empty","mod","set","datum","MOD","REM","changed","ADD_MOD","modifies","clean","cleanThreshold","runAfter","ADD_REM","fmod","encoders","every","e","reenter","update","falsy","enter","output","flag","REFLOW","items","SymbolLegend","limit","lskip","labelFormat","labelValues","size","ellipsis","offset","constant","GradientLegend","fraction","scaleFraction","peek","perc","labelFraction","perc2","sourceX","sourceY","y","targetX","target","targetY","Definition","sx","sy","tx","ty","as","shape","path","Paths","orient","SOURCE","reflow","line","arc","dx","dy","rr","sqrt","atan2","PI","curve","ix","iy","lineR","sa","sr","ta","tr","cos","sin","arcR","curveR","orthoX","orthoY","orthoR","tc","ts","sc","ss","sf","diagonalX","diagonalY","diagonalR","mr","startAngle","endAngle","start","stop","one","a","range","b","SKIP","toSet","d","Linear","Time","UTC","isString","rawDomain","domainMid","Diverging","toLowerCase","domainRaw","raw","zero","bins","Pow","Sqrt","padding","exponent","span","frac","pad","Log","zoomLog","zoomPow","Symlog","zoomSymlog","zoomLinear","domainMin","domainMax","mid","splice","Ordinal","unknown","domainImplicit","scaleImplicit","undefined","nice","lo","hi","step","ceil","floor","BinOrdinal","round","rangeStep","Band","Point","bandSpace","inner","paddingInner","paddingOuter","schemeExtent","interpolateColors","interpolate","interpolateGamma","name","Threshold","Quantile","Quantize","schemeCount","DEFAULT_COUNT","isInterpolating","quantizeInterpolator","interpolator","rangeRound","interpolateRound","fields","stableCompare","DefOutput","Zero","Center","Normalize","stack","axisticks","datajoin","legendentries","linkpath","pie","sortitems","Object","defineProperty"]
}
