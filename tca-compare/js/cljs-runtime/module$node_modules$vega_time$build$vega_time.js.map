{
"version":3,
"file":"module$node_modules$vega_time$build$vega_time.js",
"lineCount":20,
"mappings":"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",
"sources":["node_modules/vega-time/build/vega-time.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_time$build$vega_time\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-time'), require('d3-array')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-time', 'd3-array'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.d3, global.d3));\n}(this, (function (exports, vegaUtil, d3Time, d3Array) { 'use strict';\n\n  const YEAR = 'year';\n  const QUARTER = 'quarter';\n  const MONTH = 'month';\n  const WEEK = 'week';\n  const DATE = 'date';\n  const DAY = 'day';\n  const DAYOFYEAR = 'dayofyear';\n  const HOURS = 'hours';\n  const MINUTES = 'minutes';\n  const SECONDS = 'seconds';\n  const MILLISECONDS = 'milliseconds';\n\n  const TIME_UNITS = [\n    YEAR,\n    QUARTER,\n    MONTH,\n    WEEK,\n    DATE,\n    DAY,\n    DAYOFYEAR,\n    HOURS,\n    MINUTES,\n    SECONDS,\n    MILLISECONDS\n  ];\n\n  const UNITS = TIME_UNITS.reduce((o, u, i) => (o[u] = 1 + i, o), {});\n\n  function timeUnits(units) {\n    const u = vegaUtil.array(units).slice(),\n          m = {};\n\n    // check validity\n    if (!u.length) vegaUtil.error('Missing time unit.');\n\n    u.forEach(unit => {\n      if (vegaUtil.hasOwnProperty(UNITS, unit)) {\n        m[unit] = 1;\n      } else {\n        vegaUtil.error(`Invalid time unit: ${unit}.`);\n      }\n    });\n\n    const numTypes = (\n      (m[WEEK] || m[DAY] ? 1 : 0) +\n      (m[QUARTER] || m[MONTH] || m[DATE] ? 1 : 0) +\n      (m[DAYOFYEAR] ? 1 : 0)\n    );\n\n    if (numTypes > 1) {\n      vegaUtil.error(`Incompatible time units: ${units}`);\n    }\n\n    // ensure proper sort order\n    u.sort((a, b) => UNITS[a] - UNITS[b]);\n\n    return u;\n  }\n\n  const defaultSpecifiers = {\n    [YEAR]: '%Y ',\n    [QUARTER]: 'Q%q ',\n    [MONTH]: '%b ',\n    [DATE]: '%d ',\n    [WEEK]: 'W%U ',\n    [DAY]: '%a ',\n    [DAYOFYEAR]: '%j ',\n    [HOURS]: '%H:00',\n    [MINUTES]: '00:%M',\n    [SECONDS]: ':%S',\n    [MILLISECONDS]: '.%L',\n    [`${YEAR}-${MONTH}`]: '%Y-%m ',\n    [`${YEAR}-${MONTH}-${DATE}`]: '%Y-%m-%d ',\n    [`${HOURS}-${MINUTES}`]: '%H:%M'\n  };\n\n  function timeUnitSpecifier(units, specifiers) {\n    const s = vegaUtil.extend({}, defaultSpecifiers, specifiers),\n          u = timeUnits(units),\n          n = u.length;\n\n    let fmt = '', start = 0, end, key;\n\n    for (start=0; start<n; ) {\n      for (end=u.length; end > start; --end) {\n        key = u.slice(start, end).join('-');\n        if (s[key] != null) {\n          fmt += s[key];\n          start = end;\n          break;\n        }\n      }\n    }\n\n    return fmt.trim();\n  }\n\n  const t0 = new Date;\n\n  function localYear(y) {\n    t0.setFullYear(y);\n    t0.setMonth(0);\n    t0.setDate(1);\n    t0.setHours(0, 0, 0, 0);\n    return t0;\n  }\n\n  function dayofyear(d) {\n    return localDayOfYear(new Date(d));\n  }\n\n  function week(d) {\n    return localWeekNum(new Date(d));\n  }\n\n  function localDayOfYear(d) {\n    return d3Time.timeDay.count(localYear(d.getFullYear()) - 1, d);\n  }\n\n  function localWeekNum(d) {\n    return d3Time.timeWeek.count(localYear(d.getFullYear()) - 1, d);\n  }\n\n  function localFirst(y) {\n    return localYear(y).getDay();\n  }\n\n  function localDate(y, m, d, H, M, S, L) {\n    if (0 <= y && y < 100) {\n      const date = new Date(-1, m, d, H, M, S, L);\n      date.setFullYear(y);\n      return date;\n    }\n    return new Date(y, m, d, H, M, S, L);\n  }\n\n  function utcdayofyear(d) {\n    return utcDayOfYear(new Date(d));\n  }\n\n  function utcweek(d) {\n    return utcWeekNum(new Date(d));\n  }\n\n  function utcDayOfYear(d) {\n    const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n    return d3Time.utcDay.count(y - 1, d);\n  }\n\n  function utcWeekNum(d) {\n    const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n    return d3Time.utcWeek.count(y - 1, d);\n  }\n\n  function utcFirst(y) {\n    t0.setTime(Date.UTC(y, 0, 1));\n    return t0.getUTCDay();\n  }\n\n  function utcDate(y, m, d, H, M, S, L) {\n    if (0 <= y && y < 100) {\n      const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(y, m, d, H, M, S, L));\n  }\n\n  function floor(units, step, get, inv, newDate) {\n    const s = step || 1,\n          b = vegaUtil.peek(units),\n          _ = (unit, p, key) => {\n            key = key || unit;\n            return getUnit(get[key], inv[key], unit === b && s, p);\n          };\n\n    const t = new Date,\n          u = vegaUtil.toSet(units),\n          y = u[YEAR] ? _(YEAR) : vegaUtil.constant(2012),\n          m = u[MONTH] ? _(MONTH)\n            : u[QUARTER] ? _(QUARTER)\n            : vegaUtil.zero,\n          d = u[WEEK] && u[DAY] ? _(DAY, 1, WEEK + DAY)\n            : u[WEEK] ? _(WEEK, 1)\n            : u[DAY] ? _(DAY, 1)\n            : u[DATE] ? _(DATE, 1)\n            : u[DAYOFYEAR] ? _(DAYOFYEAR, 1)\n            : vegaUtil.one,\n          H = u[HOURS] ? _(HOURS) : vegaUtil.zero,\n          M = u[MINUTES] ? _(MINUTES) : vegaUtil.zero,\n          S = u[SECONDS] ? _(SECONDS) : vegaUtil.zero,\n          L = u[MILLISECONDS] ? _(MILLISECONDS) : vegaUtil.zero;\n\n    return function(v) {\n      t.setTime(+v);\n      const year = y(t);\n      return newDate(year, m(t), d(t, year), H(t), M(t), S(t), L(t));\n    };\n  }\n\n  function getUnit(f, inv, step, phase) {\n    const u = step <= 1 ? f\n      : phase ? (d, y) => phase + step * Math.floor((f(d, y) - phase) / step)\n      : (d, y) => step * Math.floor(f(d, y) / step);\n    return inv ? (d, y) => inv(u(d, y), y) : u;\n  }\n\n  // returns the day of the year based on week number, day of week,\n  // and the day of the week for the first day of the year\n  function weekday(week, day, firstDay) {\n    return day + week * 7 - (firstDay + 6) % 7;\n  }\n\n  // -- LOCAL TIME --\n\n  const localGet = {\n    [YEAR]:         d => d.getFullYear(),\n    [QUARTER]:      d => Math.floor(d.getMonth() / 3),\n    [MONTH]:        d => d.getMonth(),\n    [DATE]:         d => d.getDate(),\n    [HOURS]:        d => d.getHours(),\n    [MINUTES]:      d => d.getMinutes(),\n    [SECONDS]:      d => d.getSeconds(),\n    [MILLISECONDS]: d => d.getMilliseconds(),\n    [DAYOFYEAR]:    d => localDayOfYear(d),\n    [WEEK]:         d => localWeekNum(d),\n    [WEEK + DAY]:   (d, y) => weekday(localWeekNum(d), d.getDay(), localFirst(y)),\n    [DAY]:          (d, y) => weekday(1, d.getDay(), localFirst(y))\n  };\n\n  const localInv = {\n    [QUARTER]: q => 3 * q,\n    [WEEK]:    (w, y) => weekday(w, 0, localFirst(y))\n  };\n\n  function timeFloor(units, step) {\n    return floor(units, step || 1, localGet, localInv, localDate);\n  }\n\n  // -- UTC TIME --\n\n  const utcGet = {\n    [YEAR]:         d => d.getUTCFullYear(),\n    [QUARTER]:      d => Math.floor(d.getUTCMonth() / 3),\n    [MONTH]:        d => d.getUTCMonth(),\n    [DATE]:         d => d.getUTCDate(),\n    [HOURS]:        d => d.getUTCHours(),\n    [MINUTES]:      d => d.getUTCMinutes(),\n    [SECONDS]:      d => d.getUTCSeconds(),\n    [MILLISECONDS]: d => d.getUTCMilliseconds(),\n    [DAYOFYEAR]:    d => utcDayOfYear(d),\n    [WEEK]:         d => utcWeekNum(d),\n    [DAY]:          (d, y) => weekday(1, d.getUTCDay(), utcFirst(y)),\n    [WEEK + DAY]:   (d, y) => weekday(utcWeekNum(d), d.getUTCDay(), utcFirst(y))\n  };\n\n  const utcInv = {\n    [QUARTER]: q => 3 * q,\n    [WEEK]:    (w, y) => weekday(w, 0, utcFirst(y))\n  };\n\n  function utcFloor(units, step) {\n    return floor(units, step || 1, utcGet, utcInv, utcDate);\n  }\n\n  const timeIntervals = {\n    [YEAR]:         d3Time.timeYear,\n    [QUARTER]:      d3Time.timeMonth.every(3),\n    [MONTH]:        d3Time.timeMonth,\n    [WEEK]:         d3Time.timeWeek,\n    [DATE]:         d3Time.timeDay,\n    [DAY]:          d3Time.timeDay,\n    [DAYOFYEAR]:    d3Time.timeDay,\n    [HOURS]:        d3Time.timeHour,\n    [MINUTES]:      d3Time.timeMinute,\n    [SECONDS]:      d3Time.timeSecond,\n    [MILLISECONDS]: d3Time.timeMillisecond\n  };\n\n  const utcIntervals = {\n    [YEAR]:         d3Time.utcYear,\n    [QUARTER]:      d3Time.utcMonth.every(3),\n    [MONTH]:        d3Time.utcMonth,\n    [WEEK]:         d3Time.utcWeek,\n    [DATE]:         d3Time.utcDay,\n    [DAY]:          d3Time.utcDay,\n    [DAYOFYEAR]:    d3Time.utcDay,\n    [HOURS]:        d3Time.utcHour,\n    [MINUTES]:      d3Time.utcMinute,\n    [SECONDS]:      d3Time.utcSecond,\n    [MILLISECONDS]: d3Time.utcMillisecond\n  };\n\n  function timeInterval(unit) {\n    return timeIntervals[unit];\n  }\n\n  function utcInterval(unit) {\n    return utcIntervals[unit];\n  }\n\n  function offset(ival, date, step) {\n    return ival ? ival.offset(date, step) : undefined;\n  }\n\n  function timeOffset(unit, date, step) {\n    return offset(timeInterval(unit), date, step);\n  }\n\n  function utcOffset(unit, date, step) {\n    return offset(utcInterval(unit), date, step);\n  }\n\n  function sequence(ival, start, stop, step) {\n    return ival ? ival.range(start, stop, step) : undefined;\n  }\n\n  function timeSequence(unit, start, stop, step) {\n    return sequence(timeInterval(unit), start, stop, step);\n  }\n\n  function utcSequence(unit, start, stop, step) {\n    return sequence(utcInterval(unit), start, stop, step);\n  }\n\n  const durationSecond = 1000,\n        durationMinute = durationSecond * 60,\n        durationHour = durationMinute * 60,\n        durationDay = durationHour * 24,\n        durationWeek = durationDay * 7,\n        durationMonth = durationDay * 30,\n        durationYear = durationDay * 365;\n\n  const Milli   = [YEAR, MONTH, DATE, HOURS, MINUTES, SECONDS, MILLISECONDS],\n        Seconds = Milli.slice(0, -1),\n        Minutes = Seconds.slice(0, -1),\n        Hours   = Minutes.slice(0, -1),\n        Day     = Hours.slice(0, -1),\n        Week    = [YEAR, WEEK],\n        Month   = [YEAR, MONTH],\n        Year    = [YEAR];\n\n  const intervals = [\n    [Seconds,  1,      durationSecond],\n    [Seconds,  5,  5 * durationSecond],\n    [Seconds, 15, 15 * durationSecond],\n    [Seconds, 30, 30 * durationSecond],\n    [Minutes,  1,      durationMinute],\n    [Minutes,  5,  5 * durationMinute],\n    [Minutes, 15, 15 * durationMinute],\n    [Minutes, 30, 30 * durationMinute],\n    [  Hours,  1,      durationHour  ],\n    [  Hours,  3,  3 * durationHour  ],\n    [  Hours,  6,  6 * durationHour  ],\n    [  Hours, 12, 12 * durationHour  ],\n    [    Day,  1,      durationDay   ],\n    [   Week,  1,      durationWeek  ],\n    [  Month,  1,      durationMonth ],\n    [  Month,  3,  3 * durationMonth ],\n    [   Year,  1,      durationYear  ]\n  ];\n\n  function bin(opt) {\n    const ext = opt.extent,\n          max = opt.maxbins || 40,\n          target = Math.abs(vegaUtil.span(ext)) / max;\n\n    let i = d3Array.bisector(i => i[2]).right(intervals, target),\n        units, step;\n\n    if (i === intervals.length) {\n      units = Year,\n      step = d3Array.tickStep(ext[0] / durationYear, ext[1] / durationYear, max);\n    } else if (i) {\n      i = intervals[target / intervals[i - 1][2] < intervals[i][2] / target ? i - 1 : i];\n      units = i[0];\n      step = i[1];\n    } else {\n      units = Milli;\n      step = Math.max(d3Array.tickStep(ext[0], ext[1], max), 1);\n    }\n\n    return {units, step};\n  }\n\n  exports.DATE = DATE;\n  exports.DAY = DAY;\n  exports.DAYOFYEAR = DAYOFYEAR;\n  exports.HOURS = HOURS;\n  exports.MILLISECONDS = MILLISECONDS;\n  exports.MINUTES = MINUTES;\n  exports.MONTH = MONTH;\n  exports.QUARTER = QUARTER;\n  exports.SECONDS = SECONDS;\n  exports.TIME_UNITS = TIME_UNITS;\n  exports.WEEK = WEEK;\n  exports.YEAR = YEAR;\n  exports.dayofyear = dayofyear;\n  exports.timeBin = bin;\n  exports.timeFloor = timeFloor;\n  exports.timeInterval = timeInterval;\n  exports.timeOffset = timeOffset;\n  exports.timeSequence = timeSequence;\n  exports.timeUnitSpecifier = timeUnitSpecifier;\n  exports.timeUnits = timeUnits;\n  exports.utcFloor = utcFloor;\n  exports.utcInterval = utcInterval;\n  exports.utcOffset = utcOffset;\n  exports.utcSequence = utcSequence;\n  exports.utcdayofyear = utcdayofyear;\n  exports.utcweek = utcweek;\n  exports.week = week;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","d3","vegaUtil","d3Time","d3Array","timeUnits","units","u","array","slice","m","length","error","forEach","unit","hasOwnProperty","UNITS","sort","a","b","localYear","y","t0","setFullYear","setMonth","setDate","setHours","localDayOfYear","d","timeDay","count","getFullYear","localWeekNum","timeWeek","localDate","H","M","S","L","date","Date","utcDayOfYear","UTC","getUTCFullYear","utcDay","utcWeekNum","utcWeek","utcFirst","setTime","getUTCDay","utcDate","setUTCFullYear","floor","step","get","inv","newDate","s","peek","_","p","key","getUnit","t","toSet","YEAR","constant","MONTH","QUARTER","zero","DAY","WEEK","DATE","DAYOFYEAR","one","HOURS","MINUTES","SECONDS","MILLISECONDS","v","year","f","phase","Math","weekday","week","day","firstDay","TIME_UNITS","reduce","o","i","defaultSpecifiers","localGet","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getDay","localInv","q","w","utcGet","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","utcInv","timeIntervals","timeYear","timeMonth","every","timeHour","timeMinute","timeSecond","timeMillisecond","utcIntervals","utcYear","utcMonth","utcHour","utcMinute","utcSecond","utcMillisecond","Milli","Seconds","Minutes","Hours","Day","Month","Year","intervals","durationSecond","durationMinute","durationHour","durationDay","Week","durationWeek","durationMonth","durationYear","dayofyear","timeBin","bin","opt","ext","extent","max","maxbins","target","abs","span","bisector","right","tickStep","timeFloor","timeInterval","timeOffset","ival","offset","undefined","timeSequence","start","stop","range","timeUnitSpecifier","specifiers","extend","n","fmt","end","join","trim","utcFloor","utcInterval","utcOffset","utcSequence","utcdayofyear","utcweek","Object","defineProperty","value"]
}
