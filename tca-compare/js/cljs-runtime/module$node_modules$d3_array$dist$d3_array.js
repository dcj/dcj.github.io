shadow$provide.module$node_modules$d3_array$dist$d3_array=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0):"function"===typeof define&&define.amd?define(["exports"],factory):(global="undefined"!==typeof globalThis?globalThis:global||self,factory(global.d3=global.d3||{}))})(this,function(exports){function ascending(a,b){return a<b?-1:a>b?1:a>=b?0:NaN}function bisector(f){function left(a,
x,lo,hi){null==lo&&(lo=0);null==hi&&(hi=a.length);for(;lo<hi;){var mid=lo+hi>>>1;0>compare(a[mid],x)?lo=mid+1:hi=mid}return lo}var delta=f,compare=f;1===f.length&&(delta=function(d,x){return f(d)-x},compare=ascendingComparator(f));return{left:left,center:function(a,x,lo,hi){null==lo&&(lo=0);null==hi&&(hi=a.length);hi=left(a,x,lo,hi-1);return hi>lo&&delta(a[hi-1],x)>-delta(a[hi],x)?hi-1:hi},right:function(a,x,lo,hi){null==lo&&(lo=0);null==hi&&(hi=a.length);for(;lo<hi;){var mid=lo+hi>>>1;0<compare(a[mid],
x)?hi=mid:lo=mid+1}return lo}}}function ascendingComparator(f){return function(d,x){return ascending(f(d),x)}}function number(x){return null===x?NaN:+x}function numbers(values,valueof){var index$474,$jscomp$iter$282,$jscomp$key$value,value$475,$jscomp$iter$281,value;return $jscomp.generator.createGenerator(numbers,function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:if(void 0===valueof){$jscomp$generator$context.jumpTo(2);break}index$474=-1;$jscomp$iter$282=$jscomp.makeIterator(values);
$jscomp$key$value=$jscomp$iter$282.next();case 4:if($jscomp$key$value.done){$jscomp$generator$context.jumpTo(0);break}value$475=$jscomp$key$value.value;if(!(null!=(value$475=valueof(value$475,++index$474,values))&&(value$475=+value$475)>=value$475)){$jscomp$generator$context.jumpTo(5);break}return $jscomp$generator$context.yield(value$475,5);case 5:$jscomp$key$value=$jscomp$iter$282.next();$jscomp$generator$context.jumpTo(4);break;case 2:$jscomp$iter$281=$jscomp.makeIterator(values),$jscomp$key$value=
$jscomp$iter$281.next();case 9:if($jscomp$key$value.done){$jscomp$generator$context.jumpTo(0);break}value=$jscomp$key$value.value;if(!(null!=value&&(value=+value)>=value)){$jscomp$generator$context.jumpTo(10);break}return $jscomp$generator$context.yield(value,10);case 10:$jscomp$key$value=$jscomp$iter$281.next(),$jscomp$generator$context.jumpTo(9)}})}function count$jscomp$0(values,valueof){var count=0;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=
values.next())valueof=$jscomp$key$value.value,null!=valueof&&(valueof=+valueof)>=valueof&&++count}else{var index$476=-1,$jscomp$iter$284=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$284.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$284.next())$jscomp$key$value=$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index$476,values))&&($jscomp$key$value=+$jscomp$key$value)>=$jscomp$key$value&&++count}return count}function length$jscomp$0(array){return array.length|
0}function empty(length){return!(0<length)}function arrayify(values){return"object"!==typeof values||"length"in values?values:Array.from(values)}function reducer(reduce){return function(values){return reduce.apply(null,$jscomp.arrayFromIterable(values))}}function variance(values,valueof){var count=0,delta,mean=0,sum=0;if(void 0===valueof)for(values=$jscomp.makeIterator(values),delta=values.next();!delta.done;delta=values.next())valueof=delta.value,null!=valueof&&(valueof=+valueof)>=valueof&&(delta=
valueof-mean,mean+=delta/++count,sum+=delta*(valueof-mean));else{var index$480=-1,$jscomp$iter$286=$jscomp.makeIterator(values);for(delta=$jscomp$iter$286.next();!delta.done;delta=$jscomp$iter$286.next()){var value$481=delta.value;null!=(value$481=valueof(value$481,++index$480,values))&&(value$481=+value$481)>=value$481&&(delta=value$481-mean,mean+=delta/++count,sum+=delta*(value$481-mean))}}if(1<count)return sum/(count-1)}function deviation(values,valueof){return(values=variance(values,valueof))?
Math.sqrt(values):values}function extent(values,valueof){var min,max;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())valueof=$jscomp$key$value.value,null!=valueof&&(void 0===min?valueof>=valueof&&(min=max=valueof):(min>valueof&&(min=valueof),max<valueof&&(max=valueof)))}else{var index$482=-1,$jscomp$iter$288=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$288.next();!$jscomp$key$value.done;$jscomp$key$value=
$jscomp$iter$288.next())$jscomp$key$value=$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index$482,values))&&(void 0===min?$jscomp$key$value>=$jscomp$key$value&&(min=max=$jscomp$key$value):(min>$jscomp$key$value&&(min=$jscomp$key$value),max<$jscomp$key$value&&(max=$jscomp$key$value)))}return[min,max]}function identity(x){return x}function unique(values){if(1!==values.length)throw Error("duplicate key");return values[0]}function nest(values$jscomp$0,map,reduce,keys){return function regroup(values,
i){if(i>=keys.length)return reduce(values);for(var groups=new Map,keyof=keys[i++],index=-1,$jscomp$iter$291=$jscomp.makeIterator(values),$jscomp$key$value=$jscomp$iter$291.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$291.next()){$jscomp$key$value=$jscomp$key$value.value;var key=keyof($jscomp$key$value,++index,values),group$492=groups.get(key);group$492?group$492.push($jscomp$key$value):groups.set(key,[$jscomp$key$value])}values=$jscomp.makeIterator(groups);for(keyof=values.next();!keyof.done;keyof=
values.next())index=$jscomp.makeIterator(keyof.value),keyof=index.next().value,index=index.next().value,groups.set(keyof,regroup(index,i));return map(groups)}(values$jscomp$0,0)}function constant(x){return function(){return x}}function ticks(start,stop,count){var reverse,i=-1,step;stop=+stop;start=+start;count=+count;if(start===stop&&0<count)return[start];if(reverse=stop<start){var n=start;start=stop;stop=n}if(0===(step=tickIncrement(start,stop,count))||!isFinite(step))return[];if(0<step)for(start=
Math.ceil(start/step),stop=Math.floor(stop/step),stop=Array(n=Math.ceil(stop-start+1));++i<n;)stop[i]=(start+i)*step;else for(step=-step,start=Math.ceil(start*step),stop=Math.floor(stop*step),stop=Array(n=Math.ceil(stop-start+1));++i<n;)stop[i]=(start+i)/step;reverse&&stop.reverse();return stop}function tickIncrement(start,stop,count){stop=(stop-start)/Math.max(0,count);start=Math.floor(Math.log(stop)/Math.LN10);stop/=Math.pow(10,start);return 0<=start?(stop>=e10?10:stop>=e5?5:stop>=e2?2:1)*Math.pow(10,
start):-Math.pow(10,-start)/(stop>=e10?10:stop>=e5?5:stop>=e2?2:1)}function sturges(values){return Math.ceil(Math.log(count$jscomp$0(values))/Math.LN2)+1}function bin(){function histogram(data){Array.isArray(data)||(data=Array.from(data));var i,n=data.length,values=Array(n);for(i=0;i<n;++i)values[i]=value(data[i],i,data);i=domain(values);var x0=i[0],x1=i[1],tz=threshold(values,x0,x1);Array.isArray(tz)||(tz=ticks(x0,x1,tz),tz[tz.length-1]===x1&&tz.pop());for(var m=tz.length;tz[0]<=x0;)tz.shift(),--m;
for(;tz[m-1]>x1;)tz.pop(),--m;var bins=Array(m+1);for(i=0;i<=m;++i){var x=bins[i]=[];x.x0=0<i?tz[i-1]:x0;x.x1=i<m?tz[i]:x1}for(i=0;i<n;++i)x=values[i],x0<=x&&x<=x1&&bins[bisectRight(tz,x,0,m)].push(data[i]);return bins}var value=identity,domain=extent,threshold=sturges;histogram.value=function(_){return arguments.length?(value="function"===typeof _?_:constant(_),histogram):value};histogram.domain=function(_){return arguments.length?(domain="function"===typeof _?_:constant([_[0],_[1]]),histogram):
domain};histogram.thresholds=function(_){return arguments.length?(threshold="function"===typeof _?_:Array.isArray(_)?constant(slice.call(_)):constant(_),histogram):threshold};return histogram}function max$jscomp$0(values,valueof){var max;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())valueof=$jscomp$key$value.value,null!=valueof&&(max<valueof||void 0===max&&valueof>=valueof)&&(max=valueof)}else{var index$495=
-1,$jscomp$iter$294=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$294.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$294.next())$jscomp$key$value=$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index$495,values))&&(max<$jscomp$key$value||void 0===max&&$jscomp$key$value>=$jscomp$key$value)&&(max=$jscomp$key$value)}return max}function min$jscomp$0(values,valueof){var min;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=
values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())valueof=$jscomp$key$value.value,null!=valueof&&(min>valueof||void 0===min&&valueof>=valueof)&&(min=valueof)}else{var index$497=-1,$jscomp$iter$296=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$296.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$296.next())$jscomp$key$value=$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index$497,values))&&(min>$jscomp$key$value||void 0===
min&&$jscomp$key$value>=$jscomp$key$value)&&(min=$jscomp$key$value)}return min}function quickselect(array,k,left,right,compare){left=void 0===left?0:left;right=void 0===right?array.length-1:right;for(compare=void 0===compare?ascending:compare;right>left;){if(600<right-left){var n=right-left+1,m=k-left+1,z=Math.log(n),s=.5*Math.exp(2*z/3);z=.5*Math.sqrt(z*s*(n-s)/n)*(0>m-n/2?-1:1);quickselect(array,k,Math.max(left,Math.floor(k-m*s/n+z)),Math.min(right,Math.floor(k+(n-m)*s/n+z)),compare)}n=array[k];
m=left;s=right;swap(array,left,k);for(0<compare(array[right],n)&&swap(array,left,right);m<s;){swap(array,m,s);++m;for(--s;0>compare(array[m],n);)++m;for(;0<compare(array[s],n);)--s}0===compare(array[left],n)?swap(array,left,s):(++s,swap(array,s,right));s<=k&&(left=s+1);k<=s&&(right=s-1)}return array}function swap(array,i,j){var t=array[i];array[i]=array[j];array[j]=t}function quantile(values,p,valueof){values=Float64Array.from(numbers(values,valueof));if(valueof=values.length){if(0>=(p=+p)||2>valueof)return min$jscomp$0(values);
if(1<=p)return max$jscomp$0(values);p*=valueof-1;valueof=Math.floor(p);var value0=max$jscomp$0(quickselect(values,valueof).subarray(0,valueof+1));values=min$jscomp$0(values.subarray(valueof+1));return value0+(values-value0)*(p-valueof)}}function maxIndex(values,valueof){var maxIndex=-1,index=-1;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())if(valueof=$jscomp$key$value.value,++index,null!=valueof&&
(max<valueof||void 0===max&&valueof>=valueof)){var max=valueof;maxIndex=index}}else{var $jscomp$iter$298=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$298.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$298.next())$jscomp$key$value=$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index,values))&&(max<$jscomp$key$value||void 0===max&&$jscomp$key$value>=$jscomp$key$value)&&(max=$jscomp$key$value,maxIndex=index)}return maxIndex}function flatten(arrays){var $jscomp$iter$301,
$jscomp$key$array,array$502;return $jscomp.generator.createGenerator(flatten,function($jscomp$generator$context){1==$jscomp$generator$context.nextAddress&&($jscomp$iter$301=$jscomp.makeIterator(arrays),$jscomp$key$array=$jscomp$iter$301.next());if(3!=$jscomp$generator$context.nextAddress){if($jscomp$key$array.done)return $jscomp$generator$context.jumpTo(0);array$502=$jscomp$key$array.value;return $jscomp$generator$context.yieldAll(array$502,3)}$jscomp$key$array=$jscomp$iter$301.next();return $jscomp$generator$context.jumpTo(2)})}
function minIndex(values,valueof){var minIndex=-1,index=-1;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())if(valueof=$jscomp$key$value.value,++index,null!=valueof&&(min>valueof||void 0===min&&valueof>=valueof)){var min=valueof;minIndex=index}}else{var $jscomp$iter$303=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$303.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$303.next())$jscomp$key$value=
$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index,values))&&(min>$jscomp$key$value||void 0===min&&$jscomp$key$value>=$jscomp$key$value)&&(min=$jscomp$key$value,minIndex=index)}return minIndex}function pair(a,b){return[a,b]}function leastIndex(values,compare){compare=void 0===compare?ascending:compare;if(1===compare.length)return minIndex(values,compare);var min=-1,index=-1;values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=
values.next())if($jscomp$key$value=$jscomp$key$value.value,++index,0>min?0===compare($jscomp$key$value,$jscomp$key$value):0>compare($jscomp$key$value,minValue)){var minValue=$jscomp$key$value;min=index}return min}function shuffler(random){return function(array,i0,i1){i0=void 0===i0?0:i0;i1=void 0===i1?array.length:i1;for(i1-=i0=+i0;i1;){var i=random()*i1--|0,t=array[i1+i0];array[i1+i0]=array[i+i0];array[i+i0]=t}return array}}function transpose$jscomp$0(matrix){if(!(n=matrix.length))return[];for(var i=
-1,m=min$jscomp$0(matrix,length$1),transpose=Array(m);++i<m;)for(var j=-1,n,row=transpose[i]=Array(n);++j<n;)row[j]=matrix[j][i];return transpose}function length$1(d){return d.length}var ascendingBisect=bisector(ascending),bisectRight=ascendingBisect.right;ascendingBisect=ascendingBisect.left;var bisectCenter=bisector(number).center,Adder=function(){this._partials=new Float64Array(32);this._n=0};Adder.prototype.add=function(x){for(var p=this._partials,i=0,j=0;j<this._n&&32>j;j++){var y=p[j],hi=x+
y;(x=Math.abs(x)<Math.abs(y)?x-(hi-y):y-(hi-x))&&(p[i++]=x);x=hi}p[i]=x;this._n=i+1;return this};Adder.prototype.valueOf=function(){var p=this._partials,n=this._n,hi=0;if(0<n){for(hi=p[--n];0<n;){var x=hi;var y=p[--n];hi=x+y;if(x=y-(hi-x))break}0<n&&(0>x&&0>p[n-1]||0<x&&0<p[n-1])&&(y=2*x,x=hi+y,y==x-hi&&(hi=x))}return hi};var slice=Array.prototype.slice,e10=Math.sqrt(50),e5=Math.sqrt(10),e2=Math.sqrt(2),shuffle=shuffler(Math.random);exports.Adder=Adder;exports.ascending=ascending;exports.bin=bin;
exports.bisect=bisectRight;exports.bisectCenter=bisectCenter;exports.bisectLeft=ascendingBisect;exports.bisectRight=bisectRight;exports.bisector=bisector;exports.count=count$jscomp$0;exports.cross=function(values){for(var $jscomp$restParams=[],$jscomp$restIndex=0;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-0]=arguments[$jscomp$restIndex];var values$478=$jscomp$restParams;$jscomp$restParams="function"===typeof values$478[values$478.length-1]&&reducer(values$478.pop());
values$478=values$478.map(arrayify);$jscomp$restIndex=values$478.map(length$jscomp$0);var j$jscomp$0=values$478.length-1,index$479=Array(j$jscomp$0+1).fill(0),product=[];if(0>j$jscomp$0||$jscomp$restIndex.some(empty))return product;for(;;){product.push(index$479.map(function(j,i){return values$478[i][j]}));for(var i$jscomp$0=j$jscomp$0;++index$479[i$jscomp$0]===$jscomp$restIndex[i$jscomp$0];){if(0===i$jscomp$0)return $jscomp$restParams?product.map($jscomp$restParams):product;index$479[i$jscomp$0--]=
0}}};exports.cumsum=function(values,valueof){var sum=0,index=0;return Float64Array.from(values,void 0===valueof?function(v){return sum+=+v||0}:function(v){return sum+=+valueof(v,index++,values)||0})};exports.descending=function(a,b){return b<a?-1:b>a?1:b>=a?0:NaN};exports.deviation=deviation;exports.extent=extent;exports.fsum=function(values,valueof){var adder=new Adder;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=
values.next())valueof=$jscomp$key$value.value,(valueof=+valueof)&&adder.add(valueof)}else{var index$484=-1,$jscomp$iter$290=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$290.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$290.next())$jscomp$key$value=$jscomp$key$value.value,($jscomp$key$value=+valueof($jscomp$key$value,++index$484,values))&&adder.add($jscomp$key$value)}return+adder};exports.greatest=function(values,compare){compare=void 0===compare?ascending:compare;
var defined=!1;if(1===compare.length){values=$jscomp.makeIterator(values);for(var $jscomp$key$element=values.next();!$jscomp$key$element.done;$jscomp$key$element=values.next()){$jscomp$key$element=$jscomp$key$element.value;var value=compare($jscomp$key$element);if(defined?0<ascending(value,maxValue):0===ascending(value,value)){var max=$jscomp$key$element;var maxValue=value;defined=!0}}}else for(maxValue=$jscomp.makeIterator(values),values=maxValue.next();!values.done;values=maxValue.next())if(values=
values.value,defined?0<compare(values,max):0===compare(values,values))max=values,defined=!0;return max};exports.greatestIndex=function(values,compare){compare=void 0===compare?ascending:compare;if(1===compare.length)return maxIndex(values,compare);var max=-1,index=-1;values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())if($jscomp$key$value=$jscomp$key$value.value,++index,0>max?0===compare($jscomp$key$value,$jscomp$key$value):
0<compare($jscomp$key$value,maxValue)){var maxValue=$jscomp$key$value;max=index}return max};exports.group=function(values,keys){for(var $jscomp$restParams=[],$jscomp$restIndex=1;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-1]=arguments[$jscomp$restIndex];return nest(values,identity,identity,$jscomp$restParams)};exports.groups=function(values,keys){for(var $jscomp$restParams=[],$jscomp$restIndex=1;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-
1]=arguments[$jscomp$restIndex];return nest(values,Array.from,identity,$jscomp$restParams)};exports.histogram=bin;exports.index=function(values,keys){for(var $jscomp$restParams=[],$jscomp$restIndex=1;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-1]=arguments[$jscomp$restIndex];return nest(values,identity,unique,$jscomp$restParams)};exports.indexes=function(values,keys){for(var $jscomp$restParams=[],$jscomp$restIndex=1;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-
1]=arguments[$jscomp$restIndex];return nest(values,Array.from,unique,$jscomp$restParams)};exports.least=function(values,compare){compare=void 0===compare?ascending:compare;var defined=!1;if(1===compare.length){values=$jscomp.makeIterator(values);for(var $jscomp$key$element=values.next();!$jscomp$key$element.done;$jscomp$key$element=values.next()){$jscomp$key$element=$jscomp$key$element.value;var value=compare($jscomp$key$element);if(defined?0>ascending(value,minValue):0===ascending(value,value)){var min=
$jscomp$key$element;var minValue=value;defined=!0}}}else for(minValue=$jscomp.makeIterator(values),values=minValue.next();!values.done;values=minValue.next())if(values=values.value,defined?0>compare(values,min):0===compare(values,values))min=values,defined=!0;return min};exports.leastIndex=leastIndex;exports.max=max$jscomp$0;exports.maxIndex=maxIndex;exports.mean=function(values,valueof){var count=0,sum=0;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=
values.next())valueof=$jscomp$key$value.value,null!=valueof&&(valueof=+valueof)>=valueof&&(++count,sum+=valueof)}else{var index$500=-1,$jscomp$iter$300=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$300.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$300.next())$jscomp$key$value=$jscomp$key$value.value,null!=($jscomp$key$value=valueof($jscomp$key$value,++index$500,values))&&($jscomp$key$value=+$jscomp$key$value)>=$jscomp$key$value&&(++count,sum+=$jscomp$key$value)}if(count)return sum/
count};exports.median=function(values,valueof){return quantile(values,.5,valueof)};exports.merge=function(arrays){return Array.from(flatten(arrays))};exports.min=min$jscomp$0;exports.minIndex=minIndex;exports.pairs=function(values,pairof){pairof=void 0===pairof?pair:pairof;var pairs=[],first=!1;values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next()){$jscomp$key$value=$jscomp$key$value.value;first&&pairs.push(pairof(previous,
$jscomp$key$value));var previous=$jscomp$key$value;first=!0}return pairs};exports.permute=function(source,keys){return Array.from(keys,function(key){return source[key]})};exports.quantile=quantile;exports.quantileSorted=function(values,p,valueof){valueof=void 0===valueof?number:valueof;if(n=values.length){if(0>=(p=+p)||2>n)return+valueof(values[0],0,values);if(1<=p)return+valueof(values[n-1],n-1,values);var n;p*=n-1;n=Math.floor(p);var value0=+valueof(values[n],n,values);values=+valueof(values[n+
1],n+1,values);return value0+(values-value0)*(p-n)}};exports.quickselect=quickselect;exports.range=function(start,stop,step){start=+start;stop=+stop;step=2>(n=arguments.length)?(stop=start,start=0,1):3>n?1:+step;for(var i=-1,n=Math.max(0,Math.ceil((stop-start)/step))|0,range=Array(n);++i<n;)range[i]=start+i*step;return range};exports.rollup=function(values,reduce,keys){for(var $jscomp$restParams=[],$jscomp$restIndex=2;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-
2]=arguments[$jscomp$restIndex];return nest(values,identity,reduce,$jscomp$restParams)};exports.rollups=function(values,reduce,keys){for(var $jscomp$restParams=[],$jscomp$restIndex=2;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-2]=arguments[$jscomp$restIndex];return nest(values,Array.from,reduce,$jscomp$restParams)};exports.scan=function(values,compare){values=leastIndex(values,compare);return 0>values?void 0:values};exports.shuffle=shuffle;exports.shuffler=
shuffler;exports.sum=function(values,valueof){var sum=0;if(void 0===valueof){values=$jscomp.makeIterator(values);for(var $jscomp$key$value=values.next();!$jscomp$key$value.done;$jscomp$key$value=values.next())if(valueof=$jscomp$key$value.value,valueof=+valueof)sum+=valueof}else{var index$506=-1,$jscomp$iter$312=$jscomp.makeIterator(values);for($jscomp$key$value=$jscomp$iter$312.next();!$jscomp$key$value.done;$jscomp$key$value=$jscomp$iter$312.next())if($jscomp$key$value=$jscomp$key$value.value,$jscomp$key$value=
+valueof($jscomp$key$value,++index$506,values))sum+=$jscomp$key$value}return sum};exports.thresholdFreedmanDiaconis=function(values,min,max){return Math.ceil((max-min)/(2*(quantile(values,.75)-quantile(values,.25))*Math.pow(count$jscomp$0(values),-1/3)))};exports.thresholdScott=function(values,min,max){return Math.ceil((max-min)/(3.5*deviation(values)*Math.pow(count$jscomp$0(values),-1/3)))};exports.thresholdSturges=sturges;exports.tickIncrement=tickIncrement;exports.tickStep=function(start,stop,
count){var step0=Math.abs(stop-start)/Math.max(0,count);count=Math.pow(10,Math.floor(Math.log(step0)/Math.LN10));step0/=count;step0>=e10?count*=10:step0>=e5?count*=5:step0>=e2&&(count*=2);return stop<start?-count:count};exports.ticks=ticks;exports.transpose=transpose$jscomp$0;exports.variance=variance;exports.zip=function(){return transpose$jscomp$0(arguments)};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$d3_array$dist$d3_array.js.map
