shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$take=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,
b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});exports.take=void 0;global=require("module$node_modules$rxjs$dist$cjs$internal$Subscriber");var ArgumentOutOfRangeError_1=require("module$node_modules$rxjs$dist$cjs$internal$util$ArgumentOutOfRangeError"),empty_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$empty"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift");exports.take=
function(count){if(isNaN(count))throw new TypeError("'count' is not a number");if(0>count)throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;return function(source){return 0===count?empty_1.EMPTY:lift_1.lift(source,new TakeOperator(count))}};var TakeOperator=function(){function TakeOperator(count){this.count=count}TakeOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeSubscriber(subscriber,this.count))};return TakeOperator}(),TakeSubscriber=function(_super){function TakeSubscriber(destination,
count){destination=_super.call(this,destination)||this;destination.count=count;destination._valueCount=0;return destination}__extends(TakeSubscriber,_super);TakeSubscriber.prototype._next=function(value){var total=this.count,count=++this._valueCount;count<=total&&(this.destination.next(value),count===total&&(this.destination.complete(),this.unsubscribe()))};return TakeSubscriber}(global.Subscriber)}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$take.js.map
