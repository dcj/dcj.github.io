shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$shareReplay=function(global,require,module,exports){function shareReplayOperator(_a){var _b=_a.bufferSize,bufferSize=void 0===_b?Infinity:_b;_b=_a.windowTime;var windowTime=void 0===_b?Infinity:_b,useRefCount=_a.refCount,scheduler=_a.scheduler,subject,refCount=0,subscription;return function(source){refCount++;if(subject)var innerSub=subject.subscribe(this);else subject=new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler),
innerSub=subject.subscribe(this),subscription=source.subscribe({next:function(value){subject.next(value)},error:function(err){var dest=subject;subject=subscription=void 0;dest.error(err)},complete:function(){subscription=void 0;subject.complete()}}),subscription.closed&&(subscription=void 0);this.add(function(){refCount--;innerSub.unsubscribe();useRefCount&&0===refCount&&subscription&&(subscription.unsubscribe(),subject=subscription=void 0)})}}Object.defineProperty(exports,"__esModule",{value:!0});
exports.shareReplay=void 0;var ReplaySubject_1=require("module$node_modules$rxjs$dist$cjs$internal$ReplaySubject"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift");exports.shareReplay=function(configOrBufferSize,windowTime,scheduler){var config=configOrBufferSize&&"object"===typeof configOrBufferSize?configOrBufferSize:{bufferSize:configOrBufferSize,windowTime:windowTime,refCount:!1,scheduler:scheduler};return function(source){return lift_1.lift(source,shareReplayOperator(config))}}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$shareReplay.js.map
