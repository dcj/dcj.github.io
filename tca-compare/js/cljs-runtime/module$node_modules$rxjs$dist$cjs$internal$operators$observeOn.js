shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$observeOn=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,
b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});exports.observeOn=void 0;global=require("module$node_modules$rxjs$dist$cjs$internal$Subscriber");var Notification_1=require("module$node_modules$rxjs$dist$cjs$internal$Notification"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift");exports.observeOn=function(scheduler,delay){void 0===delay&&(delay=0);return function(source){return lift_1.lift(source,
new ObserveOnOperator(scheduler,delay))}};var ObserveOnOperator=function(){function ObserveOnOperator(scheduler,delay){void 0===delay&&(delay=0);this.scheduler=scheduler;this.delay=delay}ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay))};return ObserveOnOperator}(),ObserveOnSubscriber=function(_super){function ObserveOnSubscriber(destination,scheduler,delay){void 0===delay&&(delay=0);destination=_super.call(this,
destination)||this;destination.scheduler=scheduler;destination.delay=delay;return destination}__extends(ObserveOnSubscriber,_super);ObserveOnSubscriber.dispatch=function(arg){Notification_1.observeNotification(arg.notification,arg.destination);this.unsubscribe()};ObserveOnSubscriber.prototype.scheduleMessage=function(notification){var destination=this.destination;destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,{notification:notification,destination:destination}))};
ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(Notification_1.nextNotification(value))};ObserveOnSubscriber.prototype._error=function(error){this.scheduleMessage(Notification_1.errorNotification(error));this.unsubscribe()};ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(Notification_1.COMPLETE_NOTIFICATION);this.unsubscribe()};return ObserveOnSubscriber}(global.Subscriber)}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$observeOn.js.map
