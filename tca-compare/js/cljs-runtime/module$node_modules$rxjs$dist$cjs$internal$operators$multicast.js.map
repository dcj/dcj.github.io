{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$multicast.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,kBAAA,CAA4BJ,OAAAK,UAA5B,CAAgD,IAAK,EACrD,KAAIC,wBAA0BR,OAAA,CAAQ,6EAAR,CAA9B,CACIS,OAAST,OAAA,CAAQ,sDAAR,CAqBbE,QAAAK,UAAA,CApBAA,QAAkB,CAACG,uBAAD,CAA0BC,QAA1B,CAAoC,CAClD,MAAOC,SAAkC,CAACC,MAAD,CAAS,CAG1C,IAAAC;AADmC,UAAvC,GAAI,MAAOJ,wBAAX,CACqBA,uBADrB,CAIqBI,QAAuB,EAAG,CACvC,MAAOJ,wBADgC,CAI/C,IAAwB,UAAxB,GAAI,MAAOC,SAAX,CACI,MAAOF,OAAAM,KAAA,CAAYF,MAAZ,CAAoB,IAAIP,iBAAJ,CAAsBQ,cAAtB,CAAsCH,QAAtC,CAApB,CAEX,KAAIK,YAAcb,MAAAc,OAAA,CAAcJ,MAAd,CAAsBL,uBAAAU,gCAAtB,CAClBF,YAAAH,OAAA,CAAqBA,MACrBG,YAAAF,eAAA,CAA6BA,cAC7B,OAAOE,YAhBuC,CADA,CAqBtD,KAAIV,kBAAqB,QAAS,EAAG,CACjCA,QAASA,kBAAiB,CAACQ,cAAD,CAAiBH,QAAjB,CAA2B,CACjD,IAAAG,eAAA;AAAsBA,cACtB,KAAAH,SAAA,CAAgBA,QAFiC,CAIrDL,iBAAAa,UAAAC,KAAA,CAAmCC,QAAS,CAACC,UAAD,CAAaT,MAAb,CAAqB,CAC7D,IAAIF,SAAW,IAAAA,SAAf,CACIY,QAAU,IAAAT,eAAA,EACVU,WAAAA,CAAeb,QAAA,CAASY,OAAT,CAAAE,UAAA,CAA4BH,UAA5B,CACnBE,WAAAE,IAAA,CAAiBb,MAAAY,UAAA,CAAiBF,OAAjB,CAAjB,CACA,OAAOC,WALsD,CAOjE,OAAOlB,kBAZ0B,CAAZ,EAczBJ,QAAAI,kBAAA,CAA4BA,iBAzC+F;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/multicast.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$multicast\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MulticastOperator = exports.multicast = void 0;\nvar ConnectableObservable_1 = require(\"../observable/ConnectableObservable\");\nvar lift_1 = require(\"../util/lift\");\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return lift_1.lift(source, new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexports.multicast = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexports.MulticastOperator = MulticastOperator;\n//# sourceMappingURL=multicast.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MulticastOperator","multicast","ConnectableObservable_1","lift_1","subjectOrSubjectFactory","selector","multicastOperatorFunction","source","subjectFactory","lift","connectable","create","connectableObservableDescriptor","prototype","call","MulticastOperator.prototype.call","subscriber","subject","subscription","subscribe","add"]
}
