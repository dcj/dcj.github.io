shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$merge=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.merge=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),isScheduler_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isScheduler"),mergeAll_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$mergeAll"),fromArray_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$fromArray");
exports.merge=function(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];_i=Infinity;var scheduler=void 0,last=observables[observables.length-1];isScheduler_1.isScheduler(last)?(scheduler=observables.pop(),1<observables.length&&"number"===typeof observables[observables.length-1]&&(_i=observables.pop())):"number"===typeof last&&(_i=observables.pop());return!scheduler&&1===observables.length&&observables[0]instanceof Observable_1.Observable?observables[0]:mergeAll_1.mergeAll(_i)(fromArray_1.fromArray(observables,
scheduler))}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$merge.js.map
