shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$generate=function(global,require,module,exports){function dispatch(state){var subscriber=state.subscriber,condition=state.condition;if(!subscriber.closed){if(state.needIterate)try{state.state=state.iterate(state.state)}catch(err){subscriber.error(err);return}else state.needIterate=!0;if(condition){var conditionResult=void 0;try{conditionResult=condition(state.state)}catch(err$15){subscriber.error(err$15);return}if(!conditionResult){subscriber.complete();
return}if(subscriber.closed)return}try{var value=state.resultSelector(state.state)}catch(err$16){subscriber.error(err$16);return}if(!subscriber.closed&&(subscriber.next(value),!subscriber.closed))return this.schedule(state)}}Object.defineProperty(exports,"__esModule",{value:!0});exports.generate=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),identity_1=require("module$node_modules$rxjs$dist$cjs$internal$util$identity"),isScheduler_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isScheduler");
exports.generate=function(initialStateOrOptions,condition,iterate,resultSelectorOrScheduler,scheduler){if(1==arguments.length){var initialState=initialStateOrOptions.initialState;condition=initialStateOrOptions.condition;iterate=initialStateOrOptions.iterate;var resultSelector=initialStateOrOptions.resultSelector||identity_1.identity;scheduler=initialStateOrOptions.scheduler}else void 0===resultSelectorOrScheduler||isScheduler_1.isScheduler(resultSelectorOrScheduler)?(initialState=initialStateOrOptions,
resultSelector=identity_1.identity,scheduler=resultSelectorOrScheduler):(initialState=initialStateOrOptions,resultSelector=resultSelectorOrScheduler);return new Observable_1.Observable(function(subscriber){var state=initialState;if(scheduler)return scheduler.schedule(dispatch,0,{subscriber:subscriber,iterate:iterate,condition:condition,resultSelector:resultSelector,state:state});do{if(condition){var conditionResult=void 0;try{conditionResult=condition(state)}catch(err){subscriber.error(err);break}if(!conditionResult){subscriber.complete();
break}}conditionResult=void 0;try{conditionResult=resultSelector(state)}catch(err$13){subscriber.error(err$13);break}subscriber.next(conditionResult);if(subscriber.closed)break;try{state=iterate(state)}catch(err$14){subscriber.error(err$14);break}}while(1)})}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$generate.js.map
