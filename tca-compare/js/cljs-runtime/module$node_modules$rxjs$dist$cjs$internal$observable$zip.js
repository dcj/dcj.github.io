shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$zip=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.zip=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),Subscription_1=require("module$node_modules$rxjs$dist$cjs$internal$Subscription"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from");exports.zip=function(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i]=
arguments[_i];var resultSelector=void 0;"function"===typeof sources[sources.length-1]&&(resultSelector=sources.pop());return new Observable_1.Observable(function(subscriber){for(var buffers=sources.map(function(){return[]}),completed=sources.map(function(){return!1}),subscription=new Subscription_1.Subscription,tryEmit=function(){if(buffers.every(function(buffer){return 0<buffer.length})){var result=buffers.map(function(buffer){return buffer.shift()});if(resultSelector)try{result=resultSelector.apply(void 0,
result)}catch(err){subscriber.error(err);return}subscriber.next(result);buffers.some(function(buffer,i){return 0===buffer.length&&completed[i]})&&subscriber.complete()}},_loop_1=function(i){var source=from_1.from(sources[i]);subscription.add(source.subscribe({next:function(value){buffers[i].push(value);tryEmit()},error:function(err){return subscriber.error(err)},complete:function(){completed[i]=!0;0===buffers[i].length&&subscriber.complete()}}))},i$jscomp$0=0;!subscriber.closed&&i$jscomp$0<sources.length;i$jscomp$0++)_loop_1(i$jscomp$0);
return subscription})}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$zip.js.map
