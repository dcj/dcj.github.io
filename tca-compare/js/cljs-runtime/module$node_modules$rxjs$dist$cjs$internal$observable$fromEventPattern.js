shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$fromEventPattern=function(global,require,module,exports){function fromEventPattern(addHandler,removeHandler,resultSelector){return resultSelector?fromEventPattern(addHandler,removeHandler).pipe(map_1.map(function(args){return isArray_1.isArray(args)?resultSelector.apply(void 0,args):resultSelector(args)})):new Observable_1.Observable(function(subscriber){var handler=function(){for(var e=[],_i=0;_i<arguments.length;_i++)e[_i]=arguments[_i];
return subscriber.next(1===e.length?e[0]:e)};try{var retValue=addHandler(handler)}catch(err){subscriber.error(err);return}if(isFunction_1.isFunction(removeHandler))return function(){return removeHandler(handler,retValue)}})}Object.defineProperty(exports,"__esModule",{value:!0});exports.fromEventPattern=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),isArray_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isArray"),isFunction_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isFunction"),
map_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$map");exports.fromEventPattern=fromEventPattern}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$fromEventPattern.js.map
