shadow$provide.module$node_modules$rxjs$dist$cjs$internal$Observable=function(global,require,module,exports){function getPromiseCtor(promiseCtor){promiseCtor||(promiseCtor=config_1.config.Promise||Promise);if(!promiseCtor)throw Error("no Promise impl found");return promiseCtor}function canReportError(subscriber){for(;subscriber;){var destination=subscriber.destination,isStopped=subscriber.isStopped;if(subscriber.closed||isStopped)return!1;subscriber=destination&&destination instanceof Subscriber_1.Subscriber?
destination:null}return!0}Object.defineProperty(exports,"__esModule",{value:!0});exports.canReportError=exports.Observable=void 0;var Subscriber_1=require("module$node_modules$rxjs$dist$cjs$internal$Subscriber"),toSubscriber_1=require("module$node_modules$rxjs$dist$cjs$internal$util$toSubscriber"),observable_1=require("module$node_modules$rxjs$dist$cjs$internal$symbol$observable"),pipe_1=require("module$node_modules$rxjs$dist$cjs$internal$util$pipe"),config_1=require("module$node_modules$rxjs$dist$cjs$internal$config");
global=function(){function Observable(subscribe){subscribe&&(this._subscribe=subscribe)}Observable.prototype.lift=function(operator){var observable=new Observable;observable.source=this;observable.operator=operator;return observable};Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator;observerOrNext=toSubscriber_1.toSubscriber(observerOrNext,error,complete);operator?observerOrNext.add(operator.call(observerOrNext,this.source)):observerOrNext.add(this.source||
config_1.config.useDeprecatedSynchronousErrorHandling&&!observerOrNext.syncErrorThrowable?this._subscribe(observerOrNext):this._trySubscribe(observerOrNext));if(config_1.config.useDeprecatedSynchronousErrorHandling&&observerOrNext.syncErrorThrowable&&(observerOrNext.syncErrorThrowable=!1,observerOrNext.syncErrorThrown))throw observerOrNext.syncErrorValue;return observerOrNext};Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink)}catch(err){config_1.config.useDeprecatedSynchronousErrorHandling?
(sink.syncErrorThrown=!0,sink.syncErrorValue=err):canReportError(sink)?sink.error(err):console.warn(err)}};Observable.prototype.forEach=function(next,promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var subscription=_this.subscribe(function(value){try{next(value)}catch(err){reject(err),subscription&&subscription.unsubscribe()}},reject,resolve)})};Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&
source.subscribe(subscriber)};Observable.prototype[observable_1.observable]=function(){return this};Observable.prototype.pipe=function(){for(var operations=[],_i=0;_i<arguments.length;_i++)operations[_i]=arguments[_i];return 0===operations.length?this:pipe_1.pipeFromArray(operations)(this)};Observable.prototype.toPromise=function(promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x},
function(err){return reject(err)},function(){return resolve(value)})})};Observable.create=function(subscribe){return new Observable(subscribe)};return Observable}();exports.Observable=global;exports.canReportError=canReportError}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$Observable.js.map
