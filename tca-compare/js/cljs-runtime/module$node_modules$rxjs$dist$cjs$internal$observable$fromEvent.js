shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$fromEvent=function(global,require,module,exports){function fromEvent(target,eventName,options,resultSelector){isFunction_1.isFunction(options)&&(resultSelector=options,options=void 0);return resultSelector?fromEvent(target,eventName,options).pipe(map_1.map(function(args){return isArray_1.isArray(args)?resultSelector.apply(void 0,args):resultSelector(args)})):new Observable_1.Observable(function(subscriber){setupSubscription(target,
eventName,function(e){1<arguments.length?subscriber.next(Array.prototype.slice.call(arguments)):subscriber.next(e)},subscriber,options)})}function setupSubscription(sourceObj,eventName,handler,subscriber,options){if(sourceObj&&"function"===typeof sourceObj.addEventListener&&"function"===typeof sourceObj.removeEventListener){sourceObj.addEventListener(eventName,handler,options);var unsubscribe=function(){return sourceObj.removeEventListener(eventName,handler,options)}}else if(sourceObj&&"function"===
typeof sourceObj.on&&"function"===typeof sourceObj.off)sourceObj.on(eventName,handler),unsubscribe=function(){return sourceObj.off(eventName,handler)};else if(sourceObj&&"function"===typeof sourceObj.addListener&&"function"===typeof sourceObj.removeListener)sourceObj.addListener(eventName,handler),unsubscribe=function(){return sourceObj.removeListener(eventName,handler)};else if(sourceObj&&sourceObj.length)for(var i=0,len=sourceObj.length;i<len;i++)setupSubscription(sourceObj[i],eventName,handler,
subscriber,options);else throw new TypeError("Invalid event target");subscriber.add(unsubscribe)}Object.defineProperty(exports,"__esModule",{value:!0});exports.fromEvent=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),isArray_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isArray"),isFunction_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isFunction"),map_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$map");exports.fromEvent=
fromEvent}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$fromEvent.js.map
