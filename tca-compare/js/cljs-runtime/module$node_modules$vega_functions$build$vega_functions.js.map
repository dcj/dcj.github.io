{
"version":3,
"file":"module$node_modules$vega_functions$build$vega_functions.js",
"lineCount":34,
"mappings":"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",
"sources":["node_modules/vega-functions/build/vega-functions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_functions$build$vega_functions\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-expression'), require('d3-geo'), require('d3-color'), require('vega-dataflow'), require('vega-scale'), require('vega-scenegraph'), require('vega-selections'), require('vega-statistics'), require('vega-time'), require('d3-array')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-expression', 'd3-geo', 'd3-color', 'vega-dataflow', 'vega-scale', 'vega-scenegraph', 'vega-selections', 'vega-statistics', 'vega-time', 'd3-array'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega, global.d3, global.d3, global.vega, global.vega, global.vega, global.vega, global.vega, global.vega, global.d3));\n}(this, (function (exports, vegaUtil, vegaExpression, d3Geo, d3Color, vegaDataflow, vegaScale, vegaScenegraph, vegaSelections, vegaStatistics, vegaTime, d3Array) { 'use strict';\n\n  function data(name) {\n    const data = this.context.data[name];\n    return data ? data.values.value : [];\n  }\n\n  function indata(name, field, value) {\n    const index = this.context.data[name]['index:' + field],\n          entry = index ? index.value.get(value) : undefined;\n    return entry ? entry.count : entry;\n  }\n\n  function setdata(name, tuples) {\n    const df = this.context.dataflow,\n          data = this.context.data[name],\n          input = data.input;\n\n    df.pulse(input, df.changeset().remove(vegaUtil.truthy).insert(tuples));\n    return 1;\n  }\n\n  function encode(item, name, retval) {\n    if (item) {\n      const df = this.context.dataflow,\n            target = item.mark.source;\n      df.pulse(target, df.changeset().encode(item, name));\n    }\n    return retval !== undefined ? retval : item;\n  }\n\n  const wrap = method => function(value, spec) {\n    const locale = this.context.dataflow.locale();\n    return locale[method](spec)(value);\n  };\n\n  const format = wrap('format');\n  const timeFormat = wrap('timeFormat');\n  const utcFormat = wrap('utcFormat');\n  const timeParse = wrap('timeParse');\n  const utcParse = wrap('utcParse');\n\n  const dateObj = new Date(2000, 0, 1);\n\n  function time(month, day, specifier) {\n    if (!Number.isInteger(month) || !Number.isInteger(day)) return '';\n    dateObj.setYear(2000);\n    dateObj.setMonth(month);\n    dateObj.setDate(day);\n    return timeFormat.call(this, dateObj, specifier);\n  }\n\n  function monthFormat(month) {\n    return time.call(this, month, 1, '%B');\n  }\n\n  function monthAbbrevFormat(month) {\n    return time.call(this, month, 1, '%b');\n  }\n\n  function dayFormat(day) {\n    return time.call(this, 0, 2 + day, '%A');\n  }\n\n  function dayAbbrevFormat(day) {\n    return time.call(this, 0, 2 + day, '%a');\n  }\n\n  const DataPrefix   = ':';\n  const IndexPrefix  = '@';\n  const ScalePrefix  = '%';\n  const SignalPrefix = '$';\n\n  function dataVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) {\n      vegaUtil.error('First argument to data functions must be a string literal.');\n    }\n\n    const data = args[0].value,\n          dataName = DataPrefix + data;\n\n    if (!vegaUtil.hasOwnProperty(dataName, params)) {\n      try {\n        params[dataName] = scope.getData(data).tuplesRef();\n      } catch (err) {\n        // if data set does not exist, there's nothing to track\n      }\n    }\n  }\n\n  function indataVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) vegaUtil.error('First argument to indata must be a string literal.');\n    if (args[1].type !== vegaExpression.Literal) vegaUtil.error('Second argument to indata must be a string literal.');\n\n    const data = args[0].value,\n          field = args[1].value,\n          indexName = IndexPrefix + field;\n\n    if (!vegaUtil.hasOwnProperty(indexName, params)) {\n      params[indexName] = scope.getData(data).indataRef(scope, field);\n    }\n  }\n\n  function scaleVisitor(name, args, scope, params) {\n    if (args[0].type === vegaExpression.Literal) {\n      // add scale dependency\n      addScaleDependency(scope, params, args[0].value);\n    } else {\n      // indirect scale lookup; add all scales as parameters\n      for (name in scope.scales) {\n        addScaleDependency(scope, params, name);\n      }\n    }\n  }\n\n  function addScaleDependency(scope, params, name) {\n    const scaleName = ScalePrefix + name;\n    if (!vegaUtil.hasOwnProperty(params, scaleName)) {\n      try {\n        params[scaleName] = scope.scaleRef(name);\n      } catch (err) {\n        // TODO: error handling? warning?\n      }\n    }\n  }\n\n  function getScale(name, ctx) {\n    let s;\n    return vegaUtil.isFunction(name) ? name\n      : vegaUtil.isString(name) ? (s = ctx.scales[name]) && s.value\n      : undefined;\n  }\n\n  function internalScaleFunctions(codegen, fnctx, visitors) {\n    // add helper method to the 'this' expression function context\n    fnctx.__bandwidth = s => s && s.bandwidth ? s.bandwidth() : 0;\n\n    // register AST visitors for internal scale functions\n    visitors._bandwidth = scaleVisitor;\n    visitors._range = scaleVisitor;\n    visitors._scale = scaleVisitor;\n\n    // resolve scale reference directly to the signal hash argument\n    const ref = arg => '_[' + (\n      arg.type === vegaExpression.Literal\n        ? vegaUtil.stringValue(ScalePrefix + arg.value)\n        : vegaUtil.stringValue(ScalePrefix) + '+' + codegen(arg)\n    ) + ']';\n\n    // define and return internal scale function code generators\n    // these internal functions are called by mark encoders\n    return {\n      _bandwidth: args => `this.__bandwidth(${ref(args[0])})`,\n      _range: args => `${ref(args[0])}.range()`,\n      _scale: args => `${ref(args[0])}(${codegen(args[1])})`\n    };\n  }\n\n  function geoMethod(methodName, globalMethod) {\n    return function(projection, geojson, group) {\n      if (projection) {\n        // projection defined, use it\n        const p = getScale(projection, (group || this).context);\n        return p && p.path[methodName](geojson);\n      } else {\n        // projection undefined, use global method\n        return globalMethod(geojson);\n      }\n    };\n  }\n\n  const geoArea = geoMethod('area', d3Geo.geoArea);\n  const geoBounds = geoMethod('bounds', d3Geo.geoBounds);\n  const geoCentroid = geoMethod('centroid', d3Geo.geoCentroid);\n\n  function inScope(item) {\n    const group = this.context.group;\n    let value = false;\n\n    if (group) while (item) {\n      if (item === group) { value = true; break; }\n      item = item.mark.group;\n    }\n    return value;\n  }\n\n  function log(df, method, args) {\n    try {\n      df[method].apply(df, ['EXPRESSION'].concat([].slice.call(args)));\n    } catch (err) {\n      df.warn(err);\n    }\n    return args[args.length-1];\n  }\n\n  function warn() {\n    return log(this.context.dataflow, 'warn', arguments);\n  }\n\n  function info() {\n    return log(this.context.dataflow, 'info', arguments);\n  }\n\n  function debug() {\n    return log(this.context.dataflow, 'debug', arguments);\n  }\n\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n  function channel_luminance_value(channelValue) {\n    const val = channelValue / 255;\n    if (val <= 0.03928) {\n      return val / 12.92;\n    }\n    return Math.pow((val + 0.055) / 1.055, 2.4);\n  }\n\n  function luminance(color) {\n    const c = d3Color.rgb(color),\n          r = channel_luminance_value(c.r),\n          g = channel_luminance_value(c.g),\n          b = channel_luminance_value(c.b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  }\n\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n  function contrast(color1, color2) {\n    const lum1 = luminance(color1),\n          lum2 = luminance(color2),\n          lumL = Math.max(lum1, lum2),\n          lumD = Math.min(lum1, lum2);\n    return (lumL + 0.05) / (lumD + 0.05);\n  }\n\n  function merge() {\n    const args = [].slice.call(arguments);\n    args.unshift({});\n    return vegaUtil.extend.apply(null, args);\n  }\n\n  function equal(a, b) {\n    return a === b || a !== a && b !== b ? true\n      : vegaUtil.isArray(a) ? (\n          vegaUtil.isArray(b) && a.length === b.length ? equalArray(a, b) : false\n        )\n      : vegaUtil.isObject(a) && vegaUtil.isObject(b) ? equalObject(a, b)\n      : false;\n  }\n\n  function equalArray(a, b) {\n    for (let i=0, n=a.length; i<n; ++i) {\n      if (!equal(a[i], b[i])) return false;\n    }\n    return true;\n  }\n\n  function equalObject(a, b) {\n    for (const key in a) {\n      if (!equal(a[key], b[key])) return false;\n    }\n    return true;\n  }\n\n  function removePredicate(props) {\n    return _ => equalObject(props, _);\n  }\n\n  function modify(name, insert, remove, toggle, modify, values) {\n    const df = this.context.dataflow,\n          data = this.context.data[name],\n          input = data.input,\n          stamp = df.stamp();\n\n    let changes = data.changes,\n        predicate, key;\n\n    if (df._trigger === false || !(input.value.length || insert || toggle)) {\n      // nothing to do!\n      return 0;\n    }\n\n    if (!changes || changes.stamp < stamp) {\n      data.changes = (changes = df.changeset());\n      changes.stamp = stamp;\n      df.runAfter(() => {\n        data.modified = true;\n        df.pulse(input, changes).run();\n      }, true, 1);\n    }\n\n    if (remove) {\n      predicate = remove === true ? vegaUtil.truthy\n        : (vegaUtil.isArray(remove) || vegaDataflow.isTuple(remove)) ? remove\n        : removePredicate(remove);\n      changes.remove(predicate);\n    }\n\n    if (insert) {\n      changes.insert(insert);\n    }\n\n    if (toggle) {\n      predicate = removePredicate(toggle);\n      if (input.value.some(predicate)) {\n        changes.remove(predicate);\n      } else {\n        changes.insert(toggle);\n      }\n    }\n\n    if (modify) {\n      for (key in values) {\n        changes.modify(modify, key, values[key]);\n      }\n    }\n\n    return 1;\n  }\n\n  function pinchDistance(event) {\n    const t = event.touches,\n          dx = t[0].clientX - t[1].clientX,\n          dy = t[0].clientY - t[1].clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  function pinchAngle(event) {\n    const t = event.touches;\n    return Math.atan2(\n      t[0].clientY - t[1].clientY,\n      t[0].clientX - t[1].clientX\n    );\n  }\n\n  function bandspace(count, paddingInner, paddingOuter) {\n    return vegaScale.bandSpace(count || 0, paddingInner || 0, paddingOuter || 0);\n  }\n\n  function bandwidth(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s && s.bandwidth ? s.bandwidth() : 0;\n  }\n\n  function copy(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s ? s.copy() : undefined;\n  }\n\n  function domain(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s ? s.domain() : [];\n  }\n\n  function invert(name, range, group) {\n    const s = getScale(name, (group || this).context);\n    return !s ? undefined\n      : vegaUtil.isArray(range) ? (s.invertRange || s.invert)(range)\n      : (s.invert || s.invertExtent)(range);\n  }\n\n  function range(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s && s.range ? s.range() : [];\n  }\n\n  function scale(name, value, group) {\n    const s = getScale(name, (group || this).context);\n    return s ? s(value) : undefined;\n  }\n\n  function scaleGradient(scale, p0, p1, count, group) {\n    scale = getScale(scale, (group || this).context);\n\n    const gradient = vegaScenegraph.Gradient(p0, p1);\n\n    let stops = scale.domain(),\n        min = stops[0],\n        max = vegaUtil.peek(stops),\n        fraction = vegaUtil.identity;\n\n    if (!(max - min)) {\n      // expand scale if domain has zero span, fix #1479\n      scale = (scale.interpolator\n        ? vegaScale.scale('sequential')().interpolator(scale.interpolator())\n        : vegaScale.scale('linear')().interpolate(scale.interpolate()).range(scale.range())\n      ).domain([min=0, max=1]);\n    } else {\n      fraction = vegaScale.scaleFraction(scale, min, max);\n    }\n\n    if (scale.ticks) {\n      stops = scale.ticks(+count || 15);\n      if (min !== stops[0]) stops.unshift(min);\n      if (max !== vegaUtil.peek(stops)) stops.push(max);\n    }\n\n    stops.forEach(_ => gradient.stop(fraction(_), scale(_)));\n\n    return gradient;\n  }\n\n  function geoShape(projection, geojson, group) {\n    const p = getScale(projection, (group || this).context);\n    return function(context) {\n      return p ? p.path.context(context)(geojson) : '';\n    };\n  }\n\n  function pathShape(path) {\n    let p = null;\n    return function(context) {\n      return context\n        ? vegaScenegraph.pathRender(context, (p = p || vegaScenegraph.pathParse(path)))\n        : path;\n    };\n  }\n\n  const datum = d => d.data;\n\n  function treeNodes(name, context) {\n    const tree = data.call(context, name);\n    return tree.root && tree.root.lookup || {};\n  }\n\n  function treePath(name, source, target) {\n    const nodes = treeNodes(name, this),\n          s = nodes[source],\n          t = nodes[target];\n    return s && t ? s.path(t).map(datum) : undefined;\n  }\n\n  function treeAncestors(name, node) {\n    const n = treeNodes(name, this)[node];\n    return n ? n.ancestors().map(datum) : undefined;\n  }\n\n  const _window = () => (typeof window !== 'undefined' && window) || null;\n\n  function screen() {\n    const w = _window();\n    return w ? w.screen : {};\n  }\n\n  function windowSize() {\n    const w = _window();\n    return w\n      ? [w.innerWidth, w.innerHeight]\n      : [undefined, undefined];\n  }\n\n  function containerSize() {\n    const view = this.context.dataflow,\n          el = view.container && view.container();\n    return el\n      ? [el.clientWidth, el.clientHeight]\n      : [undefined, undefined];\n  }\n\n  function intersect(b, opt, group) {\n    if (!b) return [];\n\n    const [u, v] = b,\n          box = new vegaScenegraph.Bounds().set(u[0], u[1], v[0], v[1]),\n          scene = group || this.context.dataflow.scenegraph().root;\n\n    return vegaScenegraph.intersect(scene, box, filter(opt));\n  }\n\n  function filter(opt) {\n    let p = null;\n\n    if (opt) {\n      const types = vegaUtil.array(opt.marktype),\n            names = vegaUtil.array(opt.markname);\n      p = _ => (!types.length || types.some(t => _.marktype === t))\n            && (!names.length || names.some(s => _.name === s));\n    }\n\n    return p;\n  }\n\n  // Expression function context object\n  const functionContext = {\n    random() { return vegaStatistics.random(); }, // override default\n    cumulativeNormal: vegaStatistics.cumulativeNormal,\n    cumulativeLogNormal: vegaStatistics.cumulativeLogNormal,\n    cumulativeUniform: vegaStatistics.cumulativeUniform,\n    densityNormal: vegaStatistics.densityNormal,\n    densityLogNormal: vegaStatistics.densityLogNormal,\n    densityUniform: vegaStatistics.densityUniform,\n    quantileNormal: vegaStatistics.quantileNormal,\n    quantileLogNormal: vegaStatistics.quantileLogNormal,\n    quantileUniform: vegaStatistics.quantileUniform,\n    sampleNormal: vegaStatistics.sampleNormal,\n    sampleLogNormal: vegaStatistics.sampleLogNormal,\n    sampleUniform: vegaStatistics.sampleUniform,\n    isArray: vegaUtil.isArray,\n    isBoolean: vegaUtil.isBoolean,\n    isDate: vegaUtil.isDate,\n    isDefined(_) { return _ !== undefined; },\n    isNumber: vegaUtil.isNumber,\n    isObject: vegaUtil.isObject,\n    isRegExp: vegaUtil.isRegExp,\n    isString: vegaUtil.isString,\n    isTuple: vegaDataflow.isTuple,\n    isValid(_) { return _ != null && _ === _; },\n    toBoolean: vegaUtil.toBoolean,\n    toDate: vegaUtil.toDate,\n    toNumber: vegaUtil.toNumber,\n    toString: vegaUtil.toString,\n    flush: vegaUtil.flush,\n    lerp: vegaUtil.lerp,\n    merge,\n    pad: vegaUtil.pad,\n    peek: vegaUtil.peek,\n    span: vegaUtil.span,\n    inrange: vegaUtil.inrange,\n    truncate: vegaUtil.truncate,\n    rgb: d3Color.rgb,\n    lab: d3Color.lab,\n    hcl: d3Color.hcl,\n    hsl: d3Color.hsl,\n    luminance,\n    contrast,\n    sequence: d3Array.range,\n    format,\n    utcFormat,\n    utcParse,\n    utcOffset: vegaTime.utcOffset,\n    utcSequence: vegaTime.utcSequence,\n    timeFormat,\n    timeParse,\n    timeOffset: vegaTime.timeOffset,\n    timeSequence: vegaTime.timeSequence,\n    timeUnitSpecifier: vegaTime.timeUnitSpecifier,\n    monthFormat,\n    monthAbbrevFormat,\n    dayFormat,\n    dayAbbrevFormat,\n    quarter: vegaUtil.quarter,\n    utcquarter: vegaUtil.utcquarter,\n    week: vegaTime.week,\n    utcweek: vegaTime.utcweek,\n    dayofyear: vegaTime.dayofyear,\n    utcdayofyear: vegaTime.utcdayofyear,\n    warn,\n    info,\n    debug,\n    extent: vegaUtil.extent,\n    inScope,\n    intersect,\n    clampRange: vegaUtil.clampRange,\n    pinchDistance,\n    pinchAngle,\n    screen,\n    containerSize,\n    windowSize,\n    bandspace,\n    setdata,\n    pathShape,\n    panLinear: vegaUtil.panLinear,\n    panLog: vegaUtil.panLog,\n    panPow: vegaUtil.panPow,\n    panSymlog: vegaUtil.panSymlog,\n    zoomLinear: vegaUtil.zoomLinear,\n    zoomLog: vegaUtil.zoomLog,\n    zoomPow: vegaUtil.zoomPow,\n    zoomSymlog: vegaUtil.zoomSymlog,\n    encode,\n    modify\n  };\n\n  const eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'], // event functions\n        eventPrefix = 'event.vega.', // event function prefix\n        thisPrefix = 'this.', // function context prefix\n        astVisitors = {}; // AST visitors for dependency analysis\n\n  // export code generator parameters\n  const codegenParams = {\n    blacklist:  ['_'],\n    whitelist:  ['datum', 'event', 'item'],\n    fieldvar:   'datum',\n    globalvar:  id => `_[${vegaUtil.stringValue(SignalPrefix + id)}]`,\n    functions:  buildFunctions,\n    constants:  vegaExpression.constants,\n    visitors:   astVisitors\n  };\n\n  // export code generator\n  const codeGenerator = vegaExpression.codegen(codegenParams);\n\n  // Build expression function registry\n  function buildFunctions(codegen) {\n    const fn = vegaExpression.functions(codegen);\n    eventFunctions.forEach(name => fn[name] = eventPrefix + name);\n    for (const name in functionContext) { fn[name] = thisPrefix + name; }\n    vegaUtil.extend(fn, internalScaleFunctions(codegen, functionContext, astVisitors));\n    return fn;\n  }\n\n  // Register an expression function\n  function expressionFunction(name, fn, visitor) {\n    if (arguments.length === 1) {\n      return functionContext[name];\n    }\n\n    // register with the functionContext\n    functionContext[name] = fn;\n\n    // if there is an astVisitor register that, too\n    if (visitor) astVisitors[name] = visitor;\n\n    // if the code generator has already been initialized,\n    // we need to also register the function with it\n    if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;\n    return this;\n  }\n\n  // register expression functions with ast visitors\n  expressionFunction('bandwidth', bandwidth, scaleVisitor);\n  expressionFunction('copy', copy, scaleVisitor);\n  expressionFunction('domain', domain, scaleVisitor);\n  expressionFunction('range', range, scaleVisitor);\n  expressionFunction('invert', invert, scaleVisitor);\n  expressionFunction('scale', scale, scaleVisitor);\n  expressionFunction('gradient', scaleGradient, scaleVisitor);\n  expressionFunction('geoArea', geoArea, scaleVisitor);\n  expressionFunction('geoBounds', geoBounds, scaleVisitor);\n  expressionFunction('geoCentroid', geoCentroid, scaleVisitor);\n  expressionFunction('geoShape', geoShape, scaleVisitor);\n  expressionFunction('indata', indata, indataVisitor);\n  expressionFunction('data', data, dataVisitor);\n  expressionFunction('treePath', treePath, dataVisitor);\n  expressionFunction('treeAncestors', treeAncestors, dataVisitor);\n\n  // register Vega-Lite selection functions\n  expressionFunction('vlSelectionTest', vegaSelections.selectionTest, vegaSelections.selectionVisitor);\n  expressionFunction('vlSelectionResolve', vegaSelections.selectionResolve, vegaSelections.selectionVisitor);\n\n  function parser(expr, scope) {\n    const params = {};\n\n    // parse the expression to an abstract syntax tree (ast)\n    let ast;\n    try {\n      expr = vegaUtil.isString(expr) ? expr : (vegaUtil.stringValue(expr) + '');\n      ast = vegaExpression.parse(expr);\n    } catch (err) {\n      vegaUtil.error('Expression parse error: ' + expr);\n    }\n\n    // analyze ast function calls for dependencies\n    ast.visit(node => {\n      if (node.type !== vegaExpression.CallExpression) return;\n      const name = node.callee.name,\n            visit = codegenParams.visitors[name];\n      if (visit) visit(name, node.arguments, scope, params);\n    });\n\n    // perform code generation\n    const gen = codeGenerator(ast);\n\n    // collect signal dependencies\n    gen.globals.forEach(name => {\n      const signalName = SignalPrefix + name;\n      if (!vegaUtil.hasOwnProperty(params, signalName) && scope.getSignal(name)) {\n        params[signalName] = scope.signalRef(name);\n      }\n    });\n\n    // return generated expression code and dependencies\n    return {\n      $expr:   vegaUtil.extend({code: gen.code}, scope.options.ast ? {ast} : null),\n      $fields: gen.fields,\n      $params: params\n    };\n  }\n\n  exports.DataPrefix = DataPrefix;\n  exports.IndexPrefix = IndexPrefix;\n  exports.ScalePrefix = ScalePrefix;\n  exports.SignalPrefix = SignalPrefix;\n  exports.bandspace = bandspace;\n  exports.bandwidth = bandwidth;\n  exports.codeGenerator = codeGenerator;\n  exports.codegenParams = codegenParams;\n  exports.containerSize = containerSize;\n  exports.contrast = contrast;\n  exports.copy = copy;\n  exports.data = data;\n  exports.dataVisitor = dataVisitor;\n  exports.dayAbbrevFormat = dayAbbrevFormat;\n  exports.dayFormat = dayFormat;\n  exports.debug = debug;\n  exports.domain = domain;\n  exports.encode = encode;\n  exports.expressionFunction = expressionFunction;\n  exports.format = format;\n  exports.functionContext = functionContext;\n  exports.geoArea = geoArea;\n  exports.geoBounds = geoBounds;\n  exports.geoCentroid = geoCentroid;\n  exports.geoShape = geoShape;\n  exports.inScope = inScope;\n  exports.indata = indata;\n  exports.indataVisitor = indataVisitor;\n  exports.info = info;\n  exports.invert = invert;\n  exports.luminance = luminance;\n  exports.merge = merge;\n  exports.modify = modify;\n  exports.monthAbbrevFormat = monthAbbrevFormat;\n  exports.monthFormat = monthFormat;\n  exports.parseExpression = parser;\n  exports.pathShape = pathShape;\n  exports.pinchAngle = pinchAngle;\n  exports.pinchDistance = pinchDistance;\n  exports.range = range;\n  exports.scale = scale;\n  exports.scaleGradient = scaleGradient;\n  exports.scaleVisitor = scaleVisitor;\n  exports.screen = screen;\n  exports.setdata = setdata;\n  exports.timeFormat = timeFormat;\n  exports.timeParse = timeParse;\n  exports.treeAncestors = treeAncestors;\n  exports.treePath = treePath;\n  exports.utcFormat = utcFormat;\n  exports.utcParse = utcParse;\n  exports.warn = warn;\n  exports.windowSize = windowSize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","d3","vegaUtil","vegaExpression","d3Geo","d3Color","vegaDataflow","vegaScale","vegaScenegraph","vegaSelections","vegaStatistics","vegaTime","d3Array","data","name","context","values","value","indata","field","entry","index","get","undefined","count","setdata","tuples","df","dataflow","pulse","input","changeset","remove","truthy","insert","encode","item","retval","mark","source","time","month","day","specifier","Number","isInteger","dateObj","setYear","setMonth","setDate","timeFormat","call","monthFormat","monthAbbrevFormat","dayFormat","dayAbbrevFormat","dataVisitor","args","scope","params","type","Literal","error","dataName","DataPrefix","hasOwnProperty","getData","tuplesRef","err","indataVisitor","indexName","IndexPrefix","indataRef","scaleVisitor","addScaleDependency","scales","scaleName","ScalePrefix","scaleRef","getScale","ctx","s","isFunction","isString","internalScaleFunctions","codegen","fnctx","visitors","__bandwidth","fnctx.__bandwidth","bandwidth","_bandwidth","_range","_scale","ref","arg","stringValue","geoMethod","methodName","globalMethod","projection","geojson","group","p","path","inScope","log","method","apply","concat","slice","warn","length","arguments","info","debug","channel_luminance_value","channelValue","val","Math","pow","luminance","color","c","rgb","r","g","b","contrast","color1","color2","lum1","lum2","max","lumL","min","lumD","merge","unshift","extend","equal","a","i","n","equalObject","key","removePredicate","props","_","modify","toggle","stamp","changes","_trigger","runAfter","modified","run","predicate","isArray","isTuple","some","pinchDistance","event","t","touches","dx","clientX","dy","clientY","sqrt","pinchAngle","atan2","bandspace","paddingInner","paddingOuter","bandSpace","copy","domain","invert","range","invertRange","invertExtent","scale","scaleGradient","p0","p1","gradient","Gradient","stops","peek","fraction","identity","scaleFraction","interpolator","interpolate","ticks","push","forEach","stop","geoShape","pathShape","pathRender","pathParse","treeNodes","tree","root","lookup","treePath","target","nodes","map","datum","treeAncestors","node","ancestors","screen","w","window","windowSize","innerWidth","innerHeight","containerSize","view","el","container","clientWidth","clientHeight","filter","opt","types","array","marktype","names","markname","expressionFunction","fn","visitor","functionContext","astVisitors","codeGenerator","functions","thisPrefix","wrap","spec","locale","format","utcFormat","timeParse","utcParse","Date","geoArea","geoBounds","geoCentroid","d","random","cumulativeNormal","cumulativeLogNormal","cumulativeUniform","densityNormal","densityLogNormal","densityUniform","quantileNormal","quantileLogNormal","quantileUniform","sampleNormal","sampleLogNormal","sampleUniform","isBoolean","isDate","isDefined","isNumber","isObject","isRegExp","isValid","toBoolean","toDate","toNumber","toString","flush","lerp","pad","span","inrange","truncate","lab","hcl","hsl","sequence","utcOffset","utcSequence","timeOffset","timeSequence","timeUnitSpecifier","quarter","utcquarter","week","utcweek","dayofyear","utcdayofyear","extent","intersect","u","v","box","set","Bounds","scene","scenegraph","clampRange","panLinear","panLog","panPow","panSymlog","zoomLinear","zoomLog","zoomPow","zoomSymlog","eventFunctions","codegenParams","blacklist","whitelist","fieldvar","globalvar","id","SignalPrefix","buildFunctions","eventPrefix","constants","selectionTest","selectionVisitor","selectionResolve","parseExpression","parser","expr","ast","parse","visit","CallExpression","callee","gen","globals","signalName","getSignal","signalRef","$expr","code","options","$fields","fields","$params","Object","defineProperty"]
}
