shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap=function(global,require,module,exports){function mergeMap(project,resultSelector,concurrent){void 0===concurrent&&(concurrent=Infinity);if("function"===typeof resultSelector)return function(source){return source.pipe(mergeMap(function(a,i){return from_1.from(project(a,i)).pipe(map_1.map(function(b,ii){return resultSelector(a,b,i,ii)}))},concurrent))};"number"===typeof resultSelector&&(concurrent=resultSelector);return function(source){return lift_1.lift(source,
new MergeMapOperator(project,concurrent))}}var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,
new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});exports.flatMap=exports.MergeMapSubscriber=exports.MergeMapOperator=exports.mergeMap=void 0;var map_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$map"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift"),innerSubscribe_1=require("module$node_modules$rxjs$dist$cjs$internal$innerSubscribe");exports.mergeMap=mergeMap;var MergeMapOperator=
function(){function MergeMapOperator(project,concurrent){void 0===concurrent&&(concurrent=Infinity);this.project=project;this.concurrent=concurrent}MergeMapOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapSubscriber(observer,this.project,this.concurrent))};return MergeMapOperator}();exports.MergeMapOperator=MergeMapOperator;var MergeMapSubscriber=function(_super){function MergeMapSubscriber(destination,project,concurrent){void 0===concurrent&&(concurrent=Infinity);
var _this=_super.call(this,destination)||this;_this.destination=destination;_this.project=project;_this.concurrent=concurrent;_this.hasCompleted=!1;_this.buffer=[];_this.active=0;_this.index=0;return _this}__extends(MergeMapSubscriber,_super);MergeMapSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var result=void 0,index=this.index++;try{result=this.project(value,index)}catch(err){this.destination.error(err);return}this.active++;value=new innerSubscribe_1.SimpleInnerSubscriber(this);
this.destination.add(value);innerSubscribe_1.innerSubscribe(result,value)}else this.buffer.push(value)};MergeMapSubscriber.prototype._complete=function(){this.hasCompleted=!0;0===this.active&&0===this.buffer.length&&this.destination.complete();this.unsubscribe()};MergeMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue)};MergeMapSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--;0<buffer.length?this._next(buffer.shift()):0===this.active&&
this.hasCompleted&&this.destination.complete()};return MergeMapSubscriber}(innerSubscribe_1.SimpleOuterSubscriber);exports.MergeMapSubscriber=MergeMapSubscriber;exports.flatMap=mergeMap}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap.js.map
