shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$combineLatestWith=function(global,require,module,exports){function combineLatest(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];var project=void 0;"function"===typeof observables[observables.length-1]&&(project=observables.pop());1===observables.length&&isArray_1.isArray(observables[0])&&(observables=observables[0].slice());return function(source){return lift_1.stankyLift(source,from_1.from(__spreadArrays([source],
observables)),new combineLatest_1.CombineLatestOperator(project))}}var __spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;s=Array(s);var k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)s[k]=a[j];return s};Object.defineProperty(exports,"__esModule",{value:!0});exports.combineLatestWith=exports.combineLatest=void 0;var isArray_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isArray"),combineLatest_1=
require("module$node_modules$rxjs$dist$cjs$internal$observable$combineLatest"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift");exports.combineLatest=combineLatest;exports.combineLatestWith=function(){for(var otherSources=[],_i=0;_i<arguments.length;_i++)otherSources[_i]=arguments[_i];return combineLatest.apply(void 0,otherSources)}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$combineLatestWith.js.map
