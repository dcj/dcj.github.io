{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$retryWhen.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,UAAA,CAAoB,IAAK,EACzB,KAAIC,UAAYP,OAAA,CAAQ,oDAAR,CAAhB,CACIQ,eAAiBR,OAAA,CAAQ,yDAAR,CADrB,CAEIS,OAAST,OAAA,CAAQ,sDAAR,CA6DbE,QAAAI,UAAA,CA5DAA,QAAkB,CAACI,QAAD,CAAW,CACzB,MAAO,SAAS,CAACC,eAAD,CAAS,CACrB,MAAOF,OAAAG,KAAA,CAAYD,eAAZ;AAAoB,QAAS,CAACA,MAAD,CAAS,CACzC,IAAIE,WAAa,IAAjB,CACIC,aAAe,IAAIN,cAAAO,aADvB,CAEIC,QAFJ,CAGIC,UAAY,CAAA,CAHhB,CAIIC,OAJJ,CAKIC,gBAAkBA,QAAS,EAAG,CAC9B,GAAI,CAACD,OAAL,CAAc,CACVA,OAAA,CAAU,IAAIX,SAAAa,QACd,KAAIC,UAAY,IAAK,EACrB,IAAI,CACAA,SAAA,CAAYX,QAAA,CAASQ,OAAT,CADZ,CAGJ,MAAOI,GAAP,CAAY,CAER,MADAT,WAAAU,MAAA,CAAiBD,GAAjB,CACO,CAAA,IAFC,CAIZR,YAAAU,IAAA,CAAiBH,SAAAI,UAAA,CAAoB,CACjCC,KAAMA,QAAS,EAAG,CACVV,QAAJ,CACIW,qBAAA,EADJ,CAIIV,SAJJ,CAIgB,CAAA,CALF,CADe,CASjCM,MAAOA,QAAS,CAACD,GAAD,CAAM,CAAE,MAAOT,WAAAU,MAAA,CAAiBD,GAAjB,CAAT,CATW,CAUjCM,SAAUA,QAAS,EAAG,CAAE,MAAOf,WAAAe,SAAA,EAAT,CAVW,CAApB,CAAjB,CAVU,CAuBd,MAAOV,QAxBuB,CALlC,CA+BIS;AAAwBA,QAAS,EAAG,CACpCX,QAAA,CAAWL,MAAAc,UAAA,CAAiB,CACxBC,KAAMA,QAAS,CAACrB,KAAD,CAAQ,CAAE,MAAOQ,WAAAa,KAAA,CAAgBrB,KAAhB,CAAT,CADC,CAExBkB,MAAOA,QAAS,CAACD,GAAD,CAAM,CAClB,IAAIJ,QAAUC,eAAA,EACVD,QAAJ,EACIA,OAAAQ,KAAA,CAAaJ,GAAb,CAHc,CAFE,CAQxBM,SAAUA,QAAS,EAAG,CAAE,MAAOf,WAAAe,SAAA,EAAT,CARE,CAAjB,CAUPX,UAAJ,EACID,QAAAa,YAAA,EAGA,CAFAb,QAEA,CAFW,IAEX,CADAC,SACA,CADY,CAAA,CACZ,CAAAU,qBAAA,EAJJ,EAOIb,YAAAU,IAAA,CAAiBR,QAAjB,CAlBgC,CAqBxCW,sBAAA,EACA,OAAOb,aAtDkC,CAAtC,CADc,CADA,CAP8F;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/retryWhen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$retryWhen\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryWhen = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar Subscription_1 = require(\"../Subscription\");\nvar lift_1 = require(\"../util/lift\");\nfunction retryWhen(notifier) {\n    return function (source) {\n        return lift_1.lift(source, function (source) {\n            var subscriber = this;\n            var subscription = new Subscription_1.Subscription();\n            var innerSub;\n            var syncResub = false;\n            var errors$;\n            var getErrorSubject = function () {\n                if (!errors$) {\n                    errors$ = new Subject_1.Subject();\n                    var notifier$ = void 0;\n                    try {\n                        notifier$ = notifier(errors$);\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return null;\n                    }\n                    subscription.add(notifier$.subscribe({\n                        next: function () {\n                            if (innerSub) {\n                                subscribeForRetryWhen();\n                            }\n                            else {\n                                syncResub = true;\n                            }\n                        },\n                        error: function (err) { return subscriber.error(err); },\n                        complete: function () { return subscriber.complete(); },\n                    }));\n                }\n                return errors$;\n            };\n            var subscribeForRetryWhen = function () {\n                innerSub = source.subscribe({\n                    next: function (value) { return subscriber.next(value); },\n                    error: function (err) {\n                        var errors$ = getErrorSubject();\n                        if (errors$) {\n                            errors$.next(err);\n                        }\n                    },\n                    complete: function () { return subscriber.complete(); },\n                });\n                if (syncResub) {\n                    innerSub.unsubscribe();\n                    innerSub = null;\n                    syncResub = false;\n                    subscribeForRetryWhen();\n                }\n                else {\n                    subscription.add(innerSub);\n                }\n            };\n            subscribeForRetryWhen();\n            return subscription;\n        });\n    };\n}\nexports.retryWhen = retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","retryWhen","Subject_1","Subscription_1","lift_1","notifier","source","lift","subscriber","subscription","Subscription","innerSub","syncResub","errors$","getErrorSubject","Subject","notifier$","err","error","add","subscribe","next","subscribeForRetryWhen","complete","unsubscribe"]
}
