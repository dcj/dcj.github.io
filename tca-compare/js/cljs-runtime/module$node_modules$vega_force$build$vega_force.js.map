{
"version":3,
"file":"module$node_modules$vega_force$build$vega_force.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/vega-force/build/vega-force.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_force$build$vega_force\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util'), require('d3-force')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util', 'd3-force'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.d3));\n}(this, (function (exports, vegaDataflow, vegaUtil, d3Force) { 'use strict';\n\n  const ForceMap = {\n    center: d3Force.forceCenter,\n    collide: d3Force.forceCollide,\n    nbody: d3Force.forceManyBody,\n    link: d3Force.forceLink,\n    x: d3Force.forceX,\n    y: d3Force.forceY\n  };\n\n  const Forces = 'forces',\n        ForceParams = [\n          'alpha', 'alphaMin', 'alphaTarget',\n          'velocityDecay', 'forces'\n        ],\n        ForceConfig = ['static', 'iterations'],\n        ForceOutput = ['x', 'y', 'vx', 'vy'];\n\n  /**\n   * Force simulation layout.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<object>} params.forces - The forces to apply.\n   */\n  function Force(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  Force.Definition = {\n    'type': 'Force',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'static', 'type': 'boolean', 'default': false },\n      { 'name': 'restart', 'type': 'boolean', 'default': false },\n      { 'name': 'iterations', 'type': 'number', 'default': 300 },\n      { 'name': 'alpha', 'type': 'number', 'default': 1 },\n      { 'name': 'alphaMin', 'type': 'number', 'default': 0.001 },\n      { 'name': 'alphaTarget', 'type': 'number', 'default': 0 },\n      { 'name': 'velocityDecay', 'type': 'number', 'default': 0.4 },\n      { 'name': 'forces', 'type': 'param', 'array': true,\n        'params': [\n          {\n            'key': {'force': 'center'},\n            'params': [\n              { 'name': 'x', 'type': 'number', 'default': 0 },\n              { 'name': 'y', 'type': 'number', 'default': 0 }\n            ]\n          },\n          {\n            'key': {'force': 'collide'},\n            'params': [\n              { 'name': 'radius', 'type': 'number', 'expr': true },\n              { 'name': 'strength', 'type': 'number', 'default': 0.7 },\n              { 'name': 'iterations', 'type': 'number', 'default': 1 }\n            ]\n          },\n          {\n            'key': {'force': 'nbody'},\n            'params': [\n              { 'name': 'strength', 'type': 'number', 'default': -30 },\n              { 'name': 'theta', 'type': 'number', 'default': 0.9 },\n              { 'name': 'distanceMin', 'type': 'number', 'default': 1 },\n              { 'name': 'distanceMax', 'type': 'number' }\n            ]\n          },\n          {\n            'key': {'force': 'link'},\n            'params': [\n              { 'name': 'links', 'type': 'data' },\n              { 'name': 'id', 'type': 'field' },\n              { 'name': 'distance', 'type': 'number', 'default': 30, 'expr': true },\n              { 'name': 'strength', 'type': 'number', 'expr': true },\n              { 'name': 'iterations', 'type': 'number', 'default': 1 }\n            ]\n          },\n          {\n            'key': {'force': 'x'},\n            'params': [\n              { 'name': 'strength', 'type': 'number', 'default': 0.1 },\n              { 'name': 'x', 'type': 'field' }\n            ]\n          },\n          {\n            'key': {'force': 'y'},\n            'params': [\n              { 'name': 'strength', 'type': 'number', 'default': 0.1 },\n              { 'name': 'y', 'type': 'field' }\n            ]\n          }\n        ] },\n      {\n        'name': 'as', 'type': 'string', 'array': true, 'modify': false,\n        'default': ForceOutput\n      }\n    ]\n  };\n\n  vegaUtil.inherits(Force, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var sim = this.value,\n          change = pulse.changed(pulse.ADD_REM),\n          params = _.modified(ForceParams),\n          iters = _.iterations || 300;\n\n      // configure simulation\n      if (!sim) {\n        this.value = sim = simulation(pulse.source, _);\n        sim.on('tick', rerun(pulse.dataflow, this));\n        if (!_.static) {\n          change = true;\n          sim.tick(); // ensure we run on init\n        }\n        pulse.modifies('index');\n      } else {\n        if (change) {\n          pulse.modifies('index');\n          sim.nodes(pulse.source);\n        }\n        if (params || pulse.changed(pulse.MOD)) {\n          setup(sim, _, 0, pulse);\n        }\n      }\n\n      // run simulation\n      if (params || change || _.modified(ForceConfig)\n          || (pulse.changed() && _.restart))\n      {\n        sim.alpha(Math.max(sim.alpha(), _.alpha || 1))\n          .alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n        if (_.static) {\n          for (sim.stop(); --iters >= 0;) sim.tick();\n        } else {\n          if (sim.stopped()) sim.restart();\n          if (!change) return pulse.StopPropagation; // defer to sim ticks\n        }\n      }\n\n      return this.finish(_, pulse);\n    },\n\n    finish(_, pulse) {\n      const dataflow = pulse.dataflow;\n\n      // inspect dependencies, touch link source data\n      for (let args=this._argops, j=0, m=args.length, arg; j<m; ++j) {\n        arg = args[j];\n        if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n          continue;\n        }\n        for (var ops=arg.op._argops, i=0, n=ops.length, op; i<n; ++i) {\n          if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n            dataflow.pulse(op, dataflow.changeset().reflow());\n            break;\n          }\n        }\n      }\n\n      // reflow all nodes\n      return pulse.reflow(_.modified()).modifies(ForceOutput);\n    }\n  });\n\n  function rerun(df, op) {\n    return () => df.touch(op).run();\n  }\n\n  function simulation(nodes, _) {\n    const sim = d3Force.forceSimulation(nodes),\n          stop = sim.stop,\n          restart = sim.restart;\n    let stopped = false;\n\n    sim.stopped = () => stopped;\n    sim.restart = () => (stopped = false, restart());\n    sim.stop = () => (stopped = true, stop());\n\n    return setup(sim, _, true).on('end', () => stopped = true);\n  }\n\n  function setup(sim, _, init, pulse) {\n    var f = vegaUtil.array(_.forces), i, n, p, name;\n\n    for (i=0, n=ForceParams.length; i<n; ++i) {\n      p = ForceParams[i];\n      if (p !== Forces && _.modified(p)) sim[p](_[p]);\n    }\n\n    for (i=0, n=f.length; i<n; ++i) {\n      name = Forces + i;\n      p = init || _.modified(Forces, i) ? getForce(f[i])\n        : pulse && modified(f[i], pulse) ? sim.force(name)\n        : null;\n      if (p) sim.force(name, p);\n    }\n\n    for (n=(sim.numForces || 0); i<n; ++i) {\n      sim.force(Forces + i, null); // remove\n    }\n\n    sim.numForces = f.length;\n    return sim;\n  }\n\n  function modified(f, pulse) {\n    var k, v;\n    for (k in f) {\n      if (vegaUtil.isFunction(v = f[k]) && pulse.modified(vegaUtil.accessorFields(v)))\n        return 1;\n    }\n    return 0;\n  }\n\n  function getForce(_) {\n    var f, p;\n\n    if (!vegaUtil.hasOwnProperty(ForceMap, _.force)) {\n      vegaUtil.error('Unrecognized force: ' + _.force);\n    }\n    f = ForceMap[_.force]();\n\n    for (p in _) {\n      if (vegaUtil.isFunction(f[p])) setForceParam(f[p], _[p], _);\n    }\n\n    return f;\n  }\n\n  function setForceParam(f, v, _) {\n    f(vegaUtil.isFunction(v) ? d => v(d, _) : v);\n  }\n\n  exports.force = Force;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","d3","vegaDataflow","vegaUtil","d3Force","Force","params","Transform","call","rerun","df","op","touch","run","simulation","nodes","_","sim","forceSimulation","stop","restart","stopped","sim.stopped","sim.restart","sim.stop","setup","on","init","pulse","f","array","forces","n","i","ForceParams","length","p","Forces","modified","name","hasOwnProperty","ForceMap","force","error","isFunction","setForceParam","k","v","accessorFields","numForces","d","center","forceCenter","collide","forceCollide","nbody","forceManyBody","link","forceLink","x","forceX","y","forceY","ForceConfig","ForceOutput","Definition","inherits","transform","value","change","changed","ADD_REM","iters","iterations","modifies","source","MOD","dataflow","static","tick","alpha","Math","max","alphaDecay","pow","alphaMin","StopPropagation","finish","args","_argops","j","m","arg","_argval","ops","changeset","reflow","Object","defineProperty"]
}
