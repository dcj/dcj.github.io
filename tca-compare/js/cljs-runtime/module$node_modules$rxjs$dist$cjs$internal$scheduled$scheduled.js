shadow$provide.module$node_modules$rxjs$dist$cjs$internal$scheduled$scheduled=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.scheduled=void 0;var scheduleObservable_1=require("module$node_modules$rxjs$dist$cjs$internal$scheduled$scheduleObservable"),schedulePromise_1=require("module$node_modules$rxjs$dist$cjs$internal$scheduled$schedulePromise"),scheduleArray_1=require("module$node_modules$rxjs$dist$cjs$internal$scheduled$scheduleArray"),scheduleIterable_1=
require("module$node_modules$rxjs$dist$cjs$internal$scheduled$scheduleIterable"),isInteropObservable_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isInteropObservable"),isPromise_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isPromise"),isArrayLike_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isArrayLike"),isIterable_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isIterable"),scheduleAsyncIterable_1=require("module$node_modules$rxjs$dist$cjs$internal$scheduled$scheduleAsyncIterable");
exports.scheduled=function(input,scheduler){if(null!=input){if(isInteropObservable_1.isInteropObservable(input))return scheduleObservable_1.scheduleObservable(input,scheduler);if(isPromise_1.isPromise(input))return schedulePromise_1.schedulePromise(input,scheduler);if(isArrayLike_1.isArrayLike(input))return scheduleArray_1.scheduleArray(input,scheduler);if(isIterable_1.isIterable(input)||"string"===typeof input)return scheduleIterable_1.scheduleIterable(input,scheduler);if(Symbol&&Symbol.asyncIterator&&
"function"===typeof input[Symbol.asyncIterator])return scheduleAsyncIterable_1.scheduleAsyncIterable(input,scheduler)}throw new TypeError((null!==input&&typeof input||input)+" is not observable");}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$scheduled$scheduled.js.map
