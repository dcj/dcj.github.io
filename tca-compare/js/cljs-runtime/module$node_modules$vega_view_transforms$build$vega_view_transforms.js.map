{
"version":3,
"file":"module$node_modules$vega_view_transforms$build$vega_view_transforms.js",
"lineCount":50,
"mappings":"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",
"sources":["node_modules/vega-view-transforms/build/vega-view-transforms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_view_transforms$build$vega_view_transforms\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-scenegraph'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-scenegraph', 'vega-util'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega));\n}(this, (function (exports, vegaDataflow, vegaScenegraph, vegaUtil) { 'use strict';\n\n  const Top = 'top';\n  const Left = 'left';\n  const Right = 'right';\n  const Bottom = 'bottom';\n\n  const TopLeft = 'top-left';\n  const TopRight = 'top-right';\n  const BottomLeft = 'bottom-left';\n  const BottomRight = 'bottom-right';\n\n  const Start = 'start';\n  const Middle = 'middle';\n  const End = 'end';\n\n  const X = 'x';\n  const Y = 'y';\n\n  const Group = 'group';\n\n  const AxisRole = 'axis';\n  const TitleRole = 'title';\n  const FrameRole = 'frame';\n  const ScopeRole = 'scope';\n  const LegendRole = 'legend';\n\n  const RowHeader = 'row-header';\n  const RowFooter = 'row-footer';\n  const RowTitle  = 'row-title';\n  const ColHeader = 'column-header';\n  const ColFooter = 'column-footer';\n  const ColTitle  = 'column-title';\n\n  const Padding = 'padding';\n\n  const Symbols = 'symbol';\n\n  const Fit  = 'fit';\n  const FitX = 'fit-x';\n  const FitY = 'fit-y';\n  const Pad  = 'pad';\n  const None = 'none';\n\n  const All = 'all';\n  const Each = 'each';\n  const Flush = 'flush';\n\n  const Column = 'column';\n  const Row = 'row';\n\n  /**\n   * Calculate bounding boxes for scenegraph items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - The scenegraph mark instance to bound.\n   */\n  function Bound(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(Bound, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const view = pulse.dataflow,\n            mark = _.mark,\n            type = mark.marktype,\n            entry = vegaScenegraph.Marks[type],\n            bound = entry.bound;\n\n      let markBounds = mark.bounds, rebound;\n\n      if (entry.nested) {\n        // multi-item marks have a single bounds instance\n        if (mark.items.length) view.dirty(mark.items[0]);\n        markBounds = boundItem(mark, bound);\n        mark.items.forEach(item => {\n          item.bounds.clear().union(markBounds);\n        });\n      }\n\n      else if (type === Group || _.modified()) {\n        // operator parameters modified -> re-bound all items\n        // updates group bounds in response to modified group content\n        pulse.visit(pulse.MOD, item => view.dirty(item));\n        markBounds.clear();\n        mark.items.forEach(item => markBounds.union(boundItem(item, bound)));\n\n        // force reflow for axes/legends/titles to propagate any layout changes\n        switch (mark.role) {\n          case AxisRole:\n          case LegendRole:\n          case TitleRole:\n            pulse.reflow();\n        }\n      }\n\n      else {\n        // incrementally update bounds, re-bound mark as needed\n        rebound = pulse.changed(pulse.REM);\n\n        pulse.visit(pulse.ADD, item => {\n          markBounds.union(boundItem(item, bound));\n        });\n\n        pulse.visit(pulse.MOD, item => {\n          rebound = rebound || markBounds.alignsWith(item.bounds);\n          view.dirty(item);\n          markBounds.union(boundItem(item, bound));\n        });\n\n        if (rebound) {\n          markBounds.clear();\n          mark.items.forEach(item => markBounds.union(item.bounds));\n        }\n      }\n\n      // ensure mark bounds do not exceed any clipping region\n      vegaScenegraph.boundClip(mark);\n\n      return pulse.modifies('bounds');\n    }\n  });\n\n  function boundItem(item, bound, opt) {\n    return bound(item.bounds.clear(), item, opt);\n  }\n\n  const COUNTER_NAME = ':vega_identifier:';\n\n  /**\n   * Adds a unique identifier to all added tuples.\n   * This transform creates a new signal that serves as an id counter.\n   * As a result, the id counter is shared across all instances of this\n   * transform, generating unique ids across multiple data streams. In\n   * addition, this signal value can be included in a snapshot of the\n   * dataflow state, enabling correct resumption of id allocation.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {string} params.as - The field name for the generated identifier.\n   */\n  function Identifier(params) {\n    vegaDataflow.Transform.call(this, 0, params);\n  }\n\n  Identifier.Definition = {\n    'type': 'Identifier',\n    'metadata': {'modifies': true},\n    'params': [\n      { 'name': 'as', 'type': 'string', 'required': true }\n    ]\n  };\n\n  vegaUtil.inherits(Identifier, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const counter = getCounter(pulse.dataflow),\n            as = _.as;\n      let id = counter.value;\n\n      pulse.visit(pulse.ADD, t => (t[as] = t[as] || ++id));\n      counter.set(this.value = id);\n      return pulse;\n    }\n  });\n\n  function getCounter(view) {\n    return view._signals[COUNTER_NAME]\n       || (view._signals[COUNTER_NAME] = view.add(0));\n  }\n\n  /**\n   * Bind scenegraph items to a scenegraph mark instance.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.markdef - The mark definition for creating the mark.\n   *   This is an object of legal scenegraph mark properties which *must* include\n   *   the 'marktype' property.\n   */\n  function Mark(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(Mark, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      let mark = this.value;\n\n      // acquire mark on first invocation, bind context and group\n      if (!mark) {\n        mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);\n        mark.group.context = _.context;\n        if (!_.context.group) _.context.group = mark.group;\n        mark.source = this.source; // point to upstream collector\n        mark.clip = _.clip;\n        mark.interactive = _.interactive;\n        this.value = mark;\n      }\n\n      // initialize entering items\n      const Init = mark.marktype === Group ? vegaScenegraph.GroupItem : vegaScenegraph.Item;\n      pulse.visit(pulse.ADD, item => Init.call(item, mark));\n\n      // update clipping and/or interactive status\n      if (_.modified('clip') || _.modified('interactive')) {\n        mark.clip = _.clip;\n        mark.interactive = !!_.interactive;\n        mark.zdirty = true; // force scenegraph re-eval\n        pulse.reflow();\n      }\n\n      // bind items array to scenegraph mark\n      mark.items = pulse.source;\n      return pulse;\n    }\n  });\n\n  function lookup(_) {\n    const g = _.groups, p = _.parent;\n    return g && g.size === 1 ? g.get(Object.keys(g.object)[0])\n      : g && p ? g.lookup(p)\n      : null;\n  }\n\n  /**\n   * Analyze items for overlap, changing opacity to hide items with\n   * overlapping bounding boxes. This transform will preserve at least\n   * two items (e.g., first and last) even if overlap persists.\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting items.\n   * @param {object} [params.method] - The overlap removal method to apply.\n   *   One of 'parity' (default, hide every other item until there is no\n   *   more overlap) or 'greedy' (sequentially scan and hide and items that\n   *   overlap with the last visible item).\n   * @param {object} [params.boundScale] - A scale whose range should be used\n   *   to bound the items. Items exceeding the bounds of the scale range\n   *   will be treated as overlapping. If null or undefined, no bounds check\n   *   will be applied.\n   * @param {object} [params.boundOrient] - The orientation of the scale\n   *   (top, bottom, left, or right) used to bound items. This parameter is\n   *   ignored if boundScale is null or undefined.\n   * @param {object} [params.boundTolerance] - The tolerance in pixels for\n   *   bound inclusion testing (default 1). This specifies by how many pixels\n   *   an item's bounds may exceed the scale range bounds and not be culled.\n   * @constructor\n   */\n  function Overlap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  const methods = {\n    parity: items =>\n      items.filter((item, i) => i % 2 ? (item.opacity = 0) : 1),\n    greedy: (items, sep) => {\n      let a;\n      return items.filter((b, i) =>\n        (!i || !intersect(a.bounds, b.bounds, sep))\n          ? (a = b, 1)\n          : (b.opacity = 0)\n      );\n    }\n  };\n\n  // compute bounding box intersection\n  // including padding pixels of separation\n  const intersect = (a, b, sep) =>\n    sep > Math.max(b.x1 - a.x2, a.x1 - b.x2, b.y1 - a.y2, a.y1 - b.y2);\n\n  const hasOverlap = (items, pad) => {\n    for (var i=1, n=items.length, a=items[0].bounds, b; i<n; a=b, ++i) {\n      if (intersect(a, b = items[i].bounds, pad)) return true;\n    }\n  };\n\n  const hasBounds = item => {\n    var b = item.bounds;\n    return b.width() > 1 && b.height() > 1;\n  };\n\n  const boundTest = (scale, orient, tolerance) => {\n    var range = scale.range(),\n        b = new vegaScenegraph.Bounds();\n\n    if (orient === Top || orient === Bottom) {\n      b.set(range[0], -Infinity, range[1], +Infinity);\n    } else {\n      b.set(-Infinity, range[0], +Infinity, range[1]);\n    }\n    b.expand(tolerance || 1);\n\n    return item => b.encloses(item.bounds);\n  };\n\n  // reset all items to be fully opaque\n  const reset = source => {\n    source.forEach(item => item.opacity = 1);\n    return source;\n  };\n\n  // add all tuples to mod, fork pulse if parameters were modified\n  // fork prevents cross-stream tuple pollution (e.g., pulse from scale)\n  const reflow = (pulse, _) =>\n    pulse.reflow(_.modified()).modifies('opacity');\n\n  vegaUtil.inherits(Overlap, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const reduce = methods[_.method] || methods.parity,\n            sep = _.separation || 0;\n\n      let source = pulse.materialize(pulse.SOURCE).source,\n          items, test;\n\n      if (!source || !source.length) return;\n\n      if (!_.method) {\n        // early exit if method is falsy\n        if (_.modified('method')) {\n          reset(source);\n          pulse = reflow(pulse, _);\n        }\n        return pulse;\n      }\n\n      // skip labels with no content\n      source = source.filter(hasBounds);\n\n      // early exit, nothing to do\n      if (!source.length) return;\n\n      if (_.sort) {\n        source = source.slice().sort(_.sort);\n      }\n\n      items = reset(source);\n      pulse = reflow(pulse, _);\n\n      if (items.length >= 3 && hasOverlap(items, sep)) {\n        do {\n          items = reduce(items, sep);\n        } while (items.length >= 3 && hasOverlap(items, sep));\n\n        if (items.length < 3 && !vegaUtil.peek(source).opacity) {\n          if (items.length > 1) vegaUtil.peek(items).opacity = 0;\n          vegaUtil.peek(source).opacity = 1;\n        }\n      }\n\n      if (_.boundScale && _.boundTolerance >= 0) {\n        test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);\n        source.forEach(item => {\n          if (!test(item)) item.opacity = 0;\n        });\n      }\n\n      // re-calculate mark bounds\n      const bounds = items[0].mark.bounds.clear();\n      source.forEach(item => {\n        if (item.opacity) bounds.union(item.bounds);\n      });\n\n      return pulse;\n    }\n  });\n\n  /**\n   * Queue modified scenegraph items for rendering.\n   * @constructor\n   */\n  function Render(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(Render, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const view = pulse.dataflow;\n\n      pulse.visit(pulse.ALL, item => view.dirty(item));\n\n      // set z-index dirty flag as needed\n      if (pulse.fields && pulse.fields['zindex']) {\n        var item = pulse.source && pulse.source[0];\n        if (item) item.mark.zdirty = true;\n      }\n    }\n  });\n\n  const tempBounds = new vegaScenegraph.Bounds();\n\n  function set(item, property, value) {\n    return item[property] === value ? 0\n      : (item[property] = value, 1);\n  }\n\n  function isYAxis(mark) {\n    var orient = mark.items[0].orient;\n    return orient === Left || orient === Right;\n  }\n\n  function axisIndices(datum) {\n    var index = +datum.grid;\n    return [\n      datum.ticks  ? index++ : -1, // ticks index\n      datum.labels ? index++ : -1, // labels index\n      index + (+datum.domain)      // title index\n    ];\n  }\n\n  function axisLayout(view, axis, width, height) {  \n    var item = axis.items[0],\n        datum = item.datum,\n        delta = item.translate != null ? item.translate : 0.5,\n        orient = item.orient,\n        indices = axisIndices(datum),\n        range = item.range,\n        offset = item.offset,\n        position = item.position,\n        minExtent = item.minExtent,\n        maxExtent = item.maxExtent,\n        title = datum.title && item.items[indices[2]].items[0],\n        titlePadding = item.titlePadding,\n        bounds = item.bounds,\n        dl = title && vegaScenegraph.multiLineOffset(title),\n        x = 0, y = 0, i, s;\n\n    tempBounds.clear().union(bounds);\n    bounds.clear();\n    if ((i=indices[0]) > -1) bounds.union(item.items[i].bounds);\n    if ((i=indices[1]) > -1) bounds.union(item.items[i].bounds);\n\n    // position axis group and title\n    switch (orient) {\n      case Top:\n        x = position || 0;\n        y = -offset;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n        bounds.add(0, -s).add(range, 0);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n        break;\n      case Left:\n        x = -offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n        bounds.add(-s, 0).add(0, range);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n        break;\n      case Right:\n        x = width + offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n        bounds.add(0, 0).add(s, range);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n        break;\n      case Bottom:\n        x = position || 0;\n        y = height + offset;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n        bounds.add(0, 0).add(range, s);\n        if (title) axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n        break;\n      default:\n        x = item.x;\n        y = item.y;\n    }\n\n    // update bounds\n    vegaScenegraph.boundStroke(bounds.translate(x, y), item);\n\n    if (set(item, 'x', x + delta) | set(item, 'y', y + delta)) {\n      item.bounds = tempBounds;\n      view.dirty(item);\n      item.bounds = bounds;\n      view.dirty(item);\n    }\n\n    return item.mark.bounds.clear().union(bounds);\n  }\n\n  function axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n    const b = title.bounds;\n\n    if (title.auto) {\n      const v = sign * (offset + dl + pad);\n      let dx = 0, dy = 0;\n\n      view.dirty(title);\n      isYAxis\n        ? dx = (title.x || 0) - (title.x = v)\n        : dy = (title.y || 0) - (title.y = v);\n      title.mark.bounds.clear().union(b.translate(-dx, -dy));\n      view.dirty(title);\n    }\n\n    bounds.union(b);\n  }\n\n  // aggregation functions for grid margin determination\n  const min = (a, b) => Math.floor(Math.min(a, b));\n  const max = (a, b) => Math.ceil(Math.max(a, b));\n\n  function gridLayoutGroups(group) {\n    var groups = group.items,\n        n = groups.length,\n        i = 0, mark, items;\n\n    var views = {\n      marks:      [],\n      rowheaders: [],\n      rowfooters: [],\n      colheaders: [],\n      colfooters: [],\n      rowtitle: null,\n      coltitle: null\n    };\n\n    // layout axes, gather legends, collect bounds\n    for (; i<n; ++i) {\n      mark = groups[i];\n      items = mark.items;\n      if (mark.marktype === Group) {\n        switch (mark.role) {\n          case AxisRole:\n          case LegendRole:\n          case TitleRole:\n            break;\n          case RowHeader: views.rowheaders.push(...items); break;\n          case RowFooter: views.rowfooters.push(...items); break;\n          case ColHeader: views.colheaders.push(...items); break;\n          case ColFooter: views.colfooters.push(...items); break;\n          case RowTitle:  views.rowtitle = items[0]; break;\n          case ColTitle:  views.coltitle = items[0]; break;\n          default:        views.marks.push(...items);\n        }\n      }\n    }\n\n    return views;\n  }\n\n  function bboxFlush(item) {\n    return new vegaScenegraph.Bounds().set(0, 0, item.width || 0, item.height || 0);\n  }\n\n  function bboxFull(item) {\n    var b = item.bounds.clone();\n    return b.empty()\n      ? b.set(0, 0, 0, 0)\n      : b.translate(-(item.x || 0), -(item.y || 0));\n  }\n\n  function get(opt, key, d) {\n    var v = vegaUtil.isObject(opt) ? opt[key] : opt;\n    return v != null ? v : (d !== undefined ? d : 0);\n  }\n\n  function offsetValue(v) {\n    return v < 0 ? Math.ceil(-v) : 0;\n  }\n\n  function gridLayout(view, groups, opt) {\n    var dirty = !opt.nodirty,\n        bbox = opt.bounds === Flush ? bboxFlush : bboxFull,\n        bounds = tempBounds.set(0, 0, 0, 0),\n        alignCol = get(opt.align, Column),\n        alignRow = get(opt.align, Row),\n        padCol = get(opt.padding, Column),\n        padRow = get(opt.padding, Row),\n        ncols = opt.columns || groups.length,\n        nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n        n = groups.length,\n        xOffset = Array(n), xExtent = Array(ncols), xMax = 0,\n        yOffset = Array(n), yExtent = Array(nrows), yMax = 0,\n        dx = Array(n), dy = Array(n), boxes = Array(n),\n        m, i, c, r, b, g, px, py, x, y, offset;\n\n    for (i=0; i<ncols; ++i) xExtent[i] = 0;\n    for (i=0; i<nrows; ++i) yExtent[i] = 0;\n\n    // determine offsets for each group\n    for (i=0; i<n; ++i) {\n      g = groups[i];\n      b = boxes[i] = bbox(g);\n      g.x = g.x || 0; dx[i] = 0;\n      g.y = g.y || 0; dy[i] = 0;\n      c = i % ncols;\n      r = ~~(i / ncols);\n      xMax = Math.max(xMax, px = Math.ceil(b.x2));\n      yMax = Math.max(yMax, py = Math.ceil(b.y2));\n      xExtent[c] = Math.max(xExtent[c], px);\n      yExtent[r] = Math.max(yExtent[r], py);\n      xOffset[i] = padCol + offsetValue(b.x1);\n      yOffset[i] = padRow + offsetValue(b.y1);\n      if (dirty) view.dirty(groups[i]);\n    }\n\n    // set initial alignment offsets\n    for (i=0; i<n; ++i) {\n      if (i % ncols === 0) xOffset[i] = 0;\n      if (i < ncols) yOffset[i] = 0;\n    }\n\n    // enforce column alignment constraints\n    if (alignCol === Each) {\n      for (c=1; c<ncols; ++c) {\n        for (offset=0, i=c; i<n; i += ncols) {\n          if (offset < xOffset[i]) offset = xOffset[i];\n        }\n        for (i=c; i<n; i += ncols) {\n          xOffset[i] = offset + xExtent[c-1];\n        }\n      }\n    } else if (alignCol === All) {\n      for (offset=0, i=0; i<n; ++i) {\n        if (i % ncols && offset < xOffset[i]) offset = xOffset[i];\n      }\n      for (i=0; i<n; ++i) {\n        if (i % ncols) xOffset[i] = offset + xMax;\n      }\n    } else {\n      for (alignCol=false, c=1; c<ncols; ++c) {\n        for (i=c; i<n; i += ncols) {\n          xOffset[i] += xExtent[c-1];\n        }\n      }\n    }\n\n    // enforce row alignment constraints\n    if (alignRow === Each) {\n      for (r=1; r<nrows; ++r) {\n        for (offset=0, i=r*ncols, m=i+ncols; i<m; ++i) {\n          if (offset < yOffset[i]) offset = yOffset[i];\n        }\n        for (i=r*ncols; i<m; ++i) {\n          yOffset[i] = offset + yExtent[r-1];\n        }\n      }\n    } else if (alignRow === All) {\n      for (offset=0, i=ncols; i<n; ++i) {\n        if (offset < yOffset[i]) offset = yOffset[i];\n      }\n      for (i=ncols; i<n; ++i) {\n        yOffset[i] = offset + yMax;\n      }\n    } else {\n      for (alignRow=false, r=1; r<nrows; ++r) {\n        for (i=r*ncols, m=i+ncols; i<m; ++i) {\n          yOffset[i] += yExtent[r-1];\n        }\n      }\n    }\n\n    // perform horizontal grid layout\n    for (x=0, i=0; i<n; ++i) {\n      x = xOffset[i] + (i % ncols ? x : 0);\n      dx[i] += x - groups[i].x;\n    }\n\n    // perform vertical grid layout\n    for (c=0; c<ncols; ++c) {\n      for (y=0, i=c; i<n; i += ncols) {\n        y += yOffset[i];\n        dy[i] += y - groups[i].y;\n      }\n    }\n\n    // perform horizontal centering\n    if (alignCol && get(opt.center, Column) && nrows > 1) {\n      for (i=0; i<n; ++i) {\n        b = alignCol === All ? xMax : xExtent[i % ncols];\n        x = b - boxes[i].x2 - groups[i].x - dx[i];\n        if (x > 0) dx[i] += x / 2;\n      }\n    }\n\n    // perform vertical centering\n    if (alignRow && get(opt.center, Row) && ncols !== 1) {\n      for (i=0; i<n; ++i) {\n        b = alignRow === All ? yMax : yExtent[~~(i / ncols)];\n        y = b - boxes[i].y2 - groups[i].y - dy[i];\n        if (y > 0) dy[i] += y / 2;\n      }\n    }\n\n    // position grid relative to anchor\n    for (i=0; i<n; ++i) {\n      bounds.union(boxes[i].translate(dx[i], dy[i]));\n    }\n    x = get(opt.anchor, X);\n    y = get(opt.anchor, Y);\n    switch (get(opt.anchor, Column)) {\n      case End:    x -= bounds.width(); break;\n      case Middle: x -= bounds.width() / 2;\n    }\n    switch (get(opt.anchor, Row)) {\n      case End:    y -= bounds.height(); break;\n      case Middle: y -= bounds.height() / 2;\n    }\n    x = Math.round(x);\n    y = Math.round(y);\n\n    // update mark positions, bounds, dirty\n    bounds.clear();\n    for (i=0; i<n; ++i) {\n      groups[i].mark.bounds.clear();\n    }\n    for (i=0; i<n; ++i) {\n      g = groups[i];\n      g.x += (dx[i] += x);\n      g.y += (dy[i] += y);\n      bounds.union(g.mark.bounds.union(g.bounds.translate(dx[i], dy[i])));\n      if (dirty) view.dirty(g);\n    }\n\n    return bounds;\n  }\n\n  function trellisLayout(view, group, opt) {\n    var views = gridLayoutGroups(group),\n        groups = views.marks,\n        bbox = opt.bounds === Flush ? boundFlush : boundFull,\n        off = opt.offset,\n        ncols = opt.columns || groups.length,\n        nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n        cells = nrows * ncols,\n        x, y, x2, y2, anchor, band, offset;\n\n    // -- initial grid layout\n    const bounds = gridLayout(view, groups, opt);\n    if (bounds.empty()) bounds.set(0, 0, 0, 0); // empty grid\n\n    // -- layout grid headers and footers --\n\n    // perform row header layout\n    if (views.rowheaders) {\n      band = get(opt.headerBand, Row, null);\n      x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'), min, 0, bbox, 'x1', 0, ncols, 1, band);\n    }\n\n    // perform column header layout\n    if (views.colheaders) {\n      band = get(opt.headerBand, Column, null);\n      y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);\n    }\n\n    // perform row footer layout\n    if (views.rowfooters) {\n      band = get(opt.footerBand, Row, null);\n      x2 = layoutHeaders(view, views.rowfooters, groups, ncols, nrows,  get(off, 'rowFooter'), max, 0, bbox, 'x2', ncols-1, ncols, 1, band);\n    }\n\n    // perform column footer layout\n    if (views.colfooters) {\n      band = get(opt.footerBand, Column, null);\n      y2 = layoutHeaders(view, views.colfooters, groups, ncols, ncols,  get(off, 'columnFooter'), max, 1, bbox, 'y2', cells-ncols, 1, ncols, band);\n    }\n\n    // perform row title layout\n    if (views.rowtitle) {\n      anchor = get(opt.titleAnchor, Row);\n      offset = get(off, 'rowTitle');\n      offset = anchor === End ? x2 + offset : x - offset;\n      band = get(opt.titleBand, Row, 0.5);\n      layoutTitle(view, views.rowtitle, offset, 0, bounds, band);\n    }\n\n    // perform column title layout\n    if (views.coltitle) {\n      anchor = get(opt.titleAnchor, Column);\n      offset = get(off, 'columnTitle');\n      offset = anchor === End ? y2 + offset : y - offset;\n      band = get(opt.titleBand, Column, 0.5);\n      layoutTitle(view, views.coltitle, offset, 1, bounds, band);\n    }\n  }\n\n  function boundFlush(item, field) {\n    return field === 'x1' ? (item.x || 0)\n      : field === 'y1' ? (item.y || 0)\n      : field === 'x2' ? (item.x || 0) + (item.width || 0)\n      : field === 'y2' ? (item.y || 0) + (item.height || 0)\n      : undefined;\n  }\n\n  function boundFull(item, field) {\n    return item.bounds[field];\n  }\n\n  function layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {\n    var n = groups.length,\n        init = 0,\n        edge = 0,\n        i, j, k, m, b, h, g, x, y;\n\n    // if no groups, early exit and return 0\n    if (!n) return init;\n\n    // compute margin\n    for (i=start; i<n; i+=stride) {\n      if (groups[i]) init = agg(init, bound(groups[i], bf));\n    }\n\n    // if no headers, return margin calculation\n    if (!headers.length) return init;\n\n    // check if number of headers exceeds number of rows or columns\n    if (headers.length > limit) {\n      view.warn('Grid headers exceed limit: ' + limit);\n      headers = headers.slice(0, limit);\n    }\n\n    // apply offset\n    init += offset;\n\n    // clear mark bounds for all headers\n    for (j=0, m=headers.length; j<m; ++j) {\n      view.dirty(headers[j]);\n      headers[j].mark.bounds.clear();\n    }\n\n    // layout each header\n    for (i=start, j=0, m=headers.length; j<m; ++j, i+=stride) {\n      h = headers[j];\n      b = h.mark.bounds;\n\n      // search for nearest group to align to\n      // necessary if table has empty cells\n      for (k=i; k >= 0 && (g = groups[k]) == null; k-=back);\n\n      // assign coordinates and update bounds\n      if (isX) {\n        x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());\n        y = init;\n      } else {\n        x = init;\n        y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());\n      }\n      b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));\n      h.x = x;\n      h.y = y;\n      view.dirty(h);\n\n      // update current edge of layout bounds\n      edge = agg(edge, b[bf]);\n    }\n\n    return edge;\n  }\n\n  function layoutTitle(view, g, offset, isX, bounds, band) {\n    if (!g) return;\n    view.dirty(g);\n\n    // compute title coordinates\n    var x = offset, y = offset;\n    isX\n      ? (x = Math.round(bounds.x1 + band * bounds.width()))\n      : (y = Math.round(bounds.y1 + band * bounds.height()));\n\n    // assign coordinates and update bounds\n    g.bounds.translate(x - (g.x || 0), y - (g.y || 0));\n    g.mark.bounds.clear().union(g.bounds);\n    g.x = x;\n    g.y = y;\n\n    // queue title for redraw\n    view.dirty(g);\n  }\n\n  // utility for looking up legend layout configuration\n  function lookup$1(config, orient) {\n    const opt = config[orient] || {};\n    return (key, d) => opt[key] != null ? opt[key]\n      : config[key] != null ? config[key]\n      : d;\n  }\n\n  // if legends specify offset directly, use the maximum specified value\n  function offsets(legends, value) {\n    var max = -Infinity;\n    legends.forEach(item => {\n      if (item.offset != null) max = Math.max(max, item.offset);\n    });\n    return max > -Infinity ? max : value;\n  }\n\n  function legendParams(g, orient, config, xb, yb, w, h) {\n    const _ = lookup$1(config, orient),\n          offset = offsets(g, _('offset', 0)),\n          anchor = _('anchor', Start),\n          mult = anchor === End ? 1 : anchor === Middle ? 0.5 : 0;\n\n    const p = {\n      align:   Each,\n      bounds:  _('bounds', Flush),\n      columns: _('direction') === 'vertical' ? 1 : g.length,\n      padding: _('margin', 8),\n      center:  _('center'),\n      nodirty: true\n    };\n\n    switch (orient) {\n      case Left:\n        p.anchor = {\n          x: Math.floor(xb.x1) - offset, column: End,\n          y: mult * (h || xb.height() + 2 * xb.y1), row: anchor\n        };\n        break;\n      case Right:\n        p.anchor = {\n          x: Math.ceil(xb.x2) + offset,\n          y: mult * (h || xb.height() + 2 * xb.y1), row: anchor\n        };\n        break;\n      case Top:\n        p.anchor = {\n          y: Math.floor(yb.y1) - offset, row: End,\n          x: mult * (w || yb.width() + 2 * yb.x1), column: anchor\n        };\n        break;\n      case Bottom:\n        p.anchor = {\n          y: Math.ceil(yb.y2) + offset,\n          x: mult * (w || yb.width() + 2 * yb.x1), column: anchor\n        };\n        break;\n      case TopLeft:\n        p.anchor = {x: offset, y: offset};\n        break;\n      case TopRight:\n        p.anchor = {x: w - offset, y: offset, column: End};\n        break;\n      case BottomLeft:\n        p.anchor = {x: offset, y: h - offset, row: End};\n        break;\n      case BottomRight:\n        p.anchor = {x: w - offset, y: h - offset, column: End, row: End};\n        break;\n    }\n\n    return p;\n  }\n\n  function legendLayout(view, legend) {\n    var item = legend.items[0],\n        datum = item.datum,\n        orient = item.orient,\n        bounds = item.bounds,\n        x = item.x, y = item.y, w, h;\n\n    // cache current bounds for later comparison\n    item._bounds\n      ? item._bounds.clear().union(bounds)\n      : item._bounds = bounds.clone();\n    bounds.clear();\n\n    // adjust legend to accommodate padding and title\n    legendGroupLayout(view, item, item.items[0].items[0]);\n\n    // aggregate bounds to determine size, and include origin\n    bounds = legendBounds(item, bounds);\n    w = 2 * item.padding;\n    h = 2 * item.padding;\n    if (!bounds.empty()) {\n      w = Math.ceil(bounds.width() + w);\n      h = Math.ceil(bounds.height() + h);\n    }\n\n    if (datum.type === Symbols) {\n      legendEntryLayout(item.items[0].items[0].items[0].items);\n    }\n\n    if (orient !== None) {\n      item.x = x = 0;\n      item.y = y = 0;\n    }\n    item.width = w;\n    item.height = h;\n    vegaScenegraph.boundStroke(bounds.set(x, y, x + w, y + h), item);\n    item.mark.bounds.clear().union(bounds);\n\n    return item;\n  }\n\n  function legendBounds(item, b) {\n    // aggregate item bounds\n    item.items.forEach(_ => b.union(_.bounds));\n\n    // anchor to legend origin\n    b.x1 = item.padding;\n    b.y1 = item.padding;\n\n    return b;\n  }\n\n  function legendGroupLayout(view, item, entry) {\n    var pad = item.padding,\n        ex = pad - entry.x,\n        ey = pad - entry.y;\n\n    if (!item.datum.title) {\n      if (ex || ey) translate(view, entry, ex, ey);\n    } else {\n      var title = item.items[1].items[0],\n          anchor = title.anchor,\n          tpad = item.titlePadding || 0,\n          tx = pad - title.x,\n          ty = pad - title.y;\n\n      switch (title.orient) {\n        case Left:\n          ex += Math.ceil(title.bounds.width()) + tpad;\n          break;\n        case Right:\n        case Bottom:\n          break;\n        default:\n          ey += title.bounds.height() + tpad;\n      }\n      if (ex || ey) translate(view, entry, ex, ey);\n\n      switch (title.orient) {\n        case Left:\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n        case Right:\n          tx += legendTitleOffset(item, entry, title, End, 0, 0) + tpad;\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n        case Bottom:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n          ty += legendTitleOffset(item, entry, title, End, -1, 0, 1) + tpad;\n          break;\n        default:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n      }\n      if (tx || ty) translate(view, title, tx, ty);\n\n      // translate legend if title pushes into negative coordinates\n      if ((tx = Math.round(title.bounds.x1 - pad)) < 0) {\n        translate(view, entry, -tx, 0);\n        translate(view, title, -tx, 0);\n      }\n    }\n  }\n\n  function legendTitleOffset(item, entry, title, anchor, y, lr, noBar) {\n    const grad = item.datum.type !== 'symbol',\n          vgrad = title.datum.vgrad,\n          e = grad && (lr || !vgrad) && !noBar ? entry.items[0] : entry,\n          s = e.bounds[y ? 'y2' : 'x2'] - item.padding,\n          u = vgrad && lr ? s : 0,\n          v = vgrad && lr ? 0 : s,\n          o = y <= 0 ? 0 : vegaScenegraph.multiLineOffset(title);\n\n    return Math.round(anchor === Start ? u\n      : anchor === End ? (v - o)\n      : 0.5 * (s - o));\n  }\n\n  function translate(view, item, dx, dy) {\n    item.x += dx;\n    item.y += dy;\n    item.bounds.translate(dx, dy);\n    item.mark.bounds.translate(dx, dy);\n    view.dirty(item);\n  }\n\n  function legendEntryLayout(entries) {\n    // get max widths for each column\n    var widths = entries.reduce((w, g) => {\n      w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);\n      return w;\n    }, {});\n\n    // set dimensions of legend entry groups\n    entries.forEach(g => {\n      g.width  = widths[g.column];\n      g.height = g.bounds.y2 - g.y;\n    });\n  }\n\n  function titleLayout(view, mark, width, height, viewBounds) {\n    var group = mark.items[0],\n        frame = group.frame,\n        orient = group.orient,\n        anchor = group.anchor,\n        offset = group.offset,\n        padding = group.padding,\n        title = group.items[0].items[0],\n        subtitle = group.items[1] && group.items[1].items[0],\n        end = (orient === Left || orient === Right) ? height : width,\n        start = 0, x = 0, y = 0, sx = 0, sy = 0, pos;\n\n    if (frame !== Group) {\n      orient === Left ? (start = viewBounds.y2, end = viewBounds.y1)\n        : orient === Right ? (start = viewBounds.y1, end = viewBounds.y2)\n        : (start = viewBounds.x1, end = viewBounds.x2);\n    } else if (orient === Left) {\n      start = height, end = 0;\n    }\n\n    pos = (anchor === Start) ? start\n      : (anchor === End) ? end\n      : (start + end) / 2;\n\n    if (subtitle && subtitle.text) {\n      // position subtitle\n      switch (orient) {\n        case Top:\n        case Bottom:\n          sy = title.bounds.height() + padding;\n          break;\n        case Left:\n          sx = title.bounds.width() + padding;\n          break;\n        case Right:\n          sx = -title.bounds.width() - padding;\n          break;\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n      tempBounds.translate(sx - (subtitle.x || 0), sy - (subtitle.y || 0));\n      if (set(subtitle, 'x', sx) | set(subtitle, 'y', sy)) {\n        view.dirty(subtitle);\n        subtitle.bounds.clear().union(tempBounds);\n        subtitle.mark.bounds.clear().union(tempBounds);\n        view.dirty(subtitle);\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n    } else {\n      tempBounds.clear();\n    }\n    tempBounds.union(title.bounds);\n\n    // position title group\n    switch (orient) {\n      case Top:\n        x = pos;\n        y = viewBounds.y1 - tempBounds.height() - offset;\n        break;\n      case Left:\n        x = viewBounds.x1 - tempBounds.width() - offset;\n        y = pos;\n        break;\n      case Right:\n        x = viewBounds.x2 + tempBounds.width() + offset;\n        y = pos;\n        break;\n      case Bottom:\n        x = pos;\n        y = viewBounds.y2 + offset;\n        break;\n      default:\n        x = group.x;\n        y = group.y;\n    }\n\n    if (set(group, 'x', x) | set(group, 'y', y)) {\n      tempBounds.translate(x, y);\n      view.dirty(group);\n      group.bounds.clear().union(tempBounds);\n      mark.bounds.clear().union(tempBounds);\n      view.dirty(group);\n    }\n    return group.bounds;\n  }\n\n  /**\n   * Layout view elements such as axes and legends.\n   * Also performs size adjustments.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - Scenegraph mark of groups to layout.\n   */\n  function ViewLayout(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n\n  vegaUtil.inherits(ViewLayout, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const view = pulse.dataflow;\n      _.mark.items.forEach(group => {\n        if (_.layout) trellisLayout(view, group, _.layout);\n        layoutGroup(view, group, _);\n      });\n      return shouldReflow(_.mark.group) ? pulse.reflow() : pulse;\n    }\n  });\n\n  function shouldReflow(group) {\n    // We typically should reflow if layout is invoked (#2568), as child items\n    // may have resized and reflow ensures group bounds are re-calculated.\n    // However, legend entries have a special exception to avoid instability.\n    // For example, if a selected legend symbol gains a stroke on hover,\n    // we don't want to re-position subsequent elements in the legend.\n    return group && group.mark.role !== 'legend-entry';\n  }\n\n  function layoutGroup(view, group, _) {\n    var items = group.items,\n        width = Math.max(0, group.width || 0),\n        height = Math.max(0, group.height || 0),\n        viewBounds = new vegaScenegraph.Bounds().set(0, 0, width, height),\n        xBounds = viewBounds.clone(),\n        yBounds = viewBounds.clone(),\n        legends = [], title,\n        mark, orient, b, i, n;\n\n    // layout axes, gather legends, collect bounds\n    for (i=0, n=items.length; i<n; ++i) {\n      mark = items[i];\n      switch (mark.role) {\n        case AxisRole:\n          b = isYAxis(mark) ? xBounds : yBounds;\n          b.union(axisLayout(view, mark, width, height));\n          break;\n        case TitleRole:\n          title = mark;\n          break;\n        case LegendRole:\n          legends.push(legendLayout(view, mark));\n          break;\n        case FrameRole:\n        case ScopeRole:\n        case RowHeader:\n        case RowFooter:\n        case RowTitle:\n        case ColHeader:\n        case ColFooter:\n        case ColTitle:\n          xBounds.union(mark.bounds);\n          yBounds.union(mark.bounds);\n          break;\n        default:\n          viewBounds.union(mark.bounds);\n      }\n    }\n\n    // layout legends, adjust viewBounds\n    if (legends.length) {\n      // group legends by orient\n      const l = {};\n      legends.forEach(item => {\n        orient = item.orient || Right;\n        if (orient !== None) (l[orient] || (l[orient] = [])).push(item);\n      });\n\n      // perform grid layout for each orient group\n      for (const orient in l) {\n        const g = l[orient];\n        gridLayout(view, g, legendParams(\n          g, orient, _.legends, xBounds, yBounds, width, height\n        ));\n      }\n\n      // update view bounds\n      legends.forEach(item => {\n        const b = item.bounds;\n\n        if (!b.equals(item._bounds)) {\n          item.bounds = item._bounds;\n          view.dirty(item); // dirty previous location\n          item.bounds = b;\n          view.dirty(item);\n        }\n\n        if (_.autosize && _.autosize.type === Fit) {\n          // For autosize fit, incorporate the orthogonal dimension only.\n          // Legends that overrun the chart area will then be clipped;\n          // otherwise the chart area gets reduced to nothing!\n          switch(item.orient) {\n            case Left:\n            case Right:\n              viewBounds.add(b.x1, 0).add(b.x2, 0);\n              break;\n            case Top:\n            case Bottom:\n              viewBounds.add(0, b.y1).add(0, b.y2);\n          }\n        } else {\n          viewBounds.union(b);\n        }\n      });\n    }\n\n    // combine bounding boxes\n    viewBounds.union(xBounds).union(yBounds);\n\n    // layout title, adjust bounds\n    if (title) {\n      viewBounds.union(titleLayout(view, title, width, height, viewBounds));\n    }\n\n    // override aggregated view bounds if content is clipped\n    if (group.clip) {\n      viewBounds.set(0, 0, group.width || 0, group.height || 0);\n    }\n\n    // perform size adjustment\n    viewSizeLayout(view, group, viewBounds, _);\n  }\n\n  function viewSizeLayout(view, group, viewBounds, _) {\n    const auto = _.autosize || {},\n          type = auto.type;\n\n    if (view._autosize < 1 || !type) return;\n\n    let viewWidth = view._width,\n        viewHeight = view._height,\n        width  = Math.max(0, group.width || 0),\n        left   = Math.max(0, Math.ceil(-viewBounds.x1)),\n        height = Math.max(0, group.height || 0),\n        top    = Math.max(0, Math.ceil(-viewBounds.y1));\n\n    const right  = Math.max(0, Math.ceil(viewBounds.x2 - width)),\n          bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));\n\n    if (auto.contains === Padding) {\n      const padding = view.padding();\n      viewWidth -= padding.left + padding.right;\n      viewHeight -= padding.top + padding.bottom;\n    }\n\n    if (type === None) {\n      left = 0;\n      top = 0;\n      width = viewWidth;\n      height = viewHeight;\n    }\n\n    else if (type === Fit) {\n      width = Math.max(0, viewWidth - left - right);\n      height = Math.max(0, viewHeight - top - bottom);\n    }\n\n    else if (type === FitX) {\n      width = Math.max(0, viewWidth - left - right);\n      viewHeight = height + top + bottom;\n    }\n\n    else if (type === FitY) {\n      viewWidth = width + left + right;\n      height = Math.max(0, viewHeight - top - bottom);\n    }\n\n    else if (type === Pad) {\n      viewWidth = width + left + right;\n      viewHeight = height + top + bottom;\n    }\n\n    view._resizeView(\n      viewWidth, viewHeight,\n      width, height,\n      [left, top],\n      auto.resize\n    );\n  }\n\n  exports.bound = Bound;\n  exports.identifier = Identifier;\n  exports.mark = Mark;\n  exports.overlap = Overlap;\n  exports.render = Render;\n  exports.viewlayout = ViewLayout;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaDataflow","vegaScenegraph","vegaUtil","Bound","params","Transform","call","boundItem","item","bound","opt","bounds","clear","Identifier","getCounter","view","_signals","COUNTER_NAME","add","Mark","lookup","_","g","groups","p","parent","size","get","Object","keys","object","Overlap","Render","set","property","value","isYAxis","mark","orient","items","Left","Right","axisLayout","axis","width","height","datum","delta","translate","index","grid","ticks","labels","domain","range","offset","position","minExtent","maxExtent","title","indices","titlePadding","dl","multiLineOffset","i","tempBounds","union","Top","x","y","s","Math","max","min","y1","axisTitleLayout","x1","x2","Bottom","y2","boundStroke","dirty","pad","sign","b","auto","v","dy","dx","bboxFlush","Bounds","bboxFull","clone","empty","key","d","isObject","undefined","offsetValue","ceil","gridLayout","nodirty","bbox","Flush","alignCol","align","Column","alignRow","Row","padCol","padding","padRow","ncols","columns","length","nrows","n","xOffset","Array","xExtent","xMax","yOffset","yExtent","yMax","boxes","px","py","c","r","Each","All","m","center","anchor","X","Y","End","Middle","round","boundFlush","field","boundFull","layoutHeaders","headers","limit","agg","isX","bf","start","stride","back","band","edge","init","warn","slice","j","h","k","layoutTitle","lookup$1","config","offsets","legends","Infinity","forEach","legendParams","xb","yb","w","Start","mult","floor","column","row","TopLeft","TopRight","BottomLeft","BottomRight","legendLayout","legend","_bounds","ex","entry","ey","tpad","tx","ty","legendTitleOffset","legendBounds","Symbols","type","legendEntryLayout","None","lr","noBar","vgrad","e","u","o","entries","widths","reduce","titleLayout","viewBounds","group","subtitle","end","sy","sx","Group","frame","pos","text","ViewLayout","shouldReflow","role","layoutGroup","xBounds","yBounds","AxisRole","TitleRole","LegendRole","push","FrameRole","ScopeRole","RowHeader","RowFooter","RowTitle","ColHeader","ColFooter","ColTitle","l","equals","autosize","Fit","clip","viewSizeLayout","_autosize","viewWidth","_width","viewHeight","_height","left","top","right","bottom","Padding","contains","FitX","FitY","Pad","_resizeView","resize","inherits","transform","pulse","dataflow","marktype","Marks","markBounds","nested","modified","visit","MOD","reflow","rebound","changed","REM","ADD","alignsWith","boundClip","modifies","Definition","counter","as","id","t","scenegraph","markdef","context","source","interactive","Init","GroupItem","Item","zdirty","methods","parity","filter","opacity","greedy","sep","a","intersect","hasOverlap","hasBounds","boundTest","scale","tolerance","expand","encloses","reset","method","separation","materialize","SOURCE","sort","peek","boundScale","boundTolerance","test","boundOrient","ALL","fields","layout","rowheaders","rowfooters","colheaders","colfooters","rowtitle","coltitle","marks","off","cells","headerBand","footerBand","titleAnchor","titleBand","identifier","overlap","render","viewlayout","defineProperty"]
}
