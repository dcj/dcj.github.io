shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$subscribeOn=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,
b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});exports.subscribeOn=void 0;global=require("module$node_modules$rxjs$dist$cjs$internal$Observable");var asap_1=require("module$node_modules$rxjs$dist$cjs$internal$scheduler$asap"),isScheduler_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isScheduler"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift"),SubscribeOnObservable=function(_super){function SubscribeOnObservable(source,
delayTime,scheduler){void 0===delayTime&&(delayTime=0);void 0===scheduler&&(scheduler=asap_1.asap);var _this=_super.call(this)||this;_this.source=source;_this.delayTime=delayTime;_this.scheduler=scheduler;0>delayTime&&(_this.delayTime=0);isScheduler_1.isScheduler(scheduler)||(_this.scheduler=asap_1.asap);return _this}__extends(SubscribeOnObservable,_super);SubscribeOnObservable.dispatch=function(arg){this.add(arg.source.subscribe(arg.subscriber))};SubscribeOnObservable.prototype._subscribe=function(subscriber){return this.scheduler.schedule(SubscribeOnObservable.dispatch,
this.delayTime,{source:this.source,subscriber:subscriber})};return SubscribeOnObservable}(global.Observable);exports.subscribeOn=function(scheduler,delay){void 0===delay&&(delay=0);return function(source){return lift_1.lift(source,new SubscribeOnOperator(scheduler,delay))}};var SubscribeOnOperator=function(){function SubscribeOnOperator(scheduler,delay){this.scheduler=scheduler;this.delay=delay}SubscribeOnOperator.prototype.call=function(subscriber,source){return(new SubscribeOnObservable(source,
this.delay,this.scheduler)).subscribe(subscriber)};return SubscribeOnOperator}()}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$subscribeOn.js.map
